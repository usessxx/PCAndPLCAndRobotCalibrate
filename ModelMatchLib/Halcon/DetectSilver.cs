//
// File generated by HDevelop for HALCON/.NET (C#) Version 20.11.0.0
// Non-ASCII strings in this file are encoded in local-8-bit encoding (cp936).
// 
// Please note that non-ASCII characters in string constants are exported
// as octal codes in order to guarantee that the strings are correctly
// created on all systems, independent on any compiler settings.
// 
// Source files with different encoding should not be mixed in one project.
//

using HalconDotNet;

public partial class HDevelopExport
{
#if !(NO_EXPORT_MAIN || NO_EXPORT_APP_MAIN)
  public HDevelopExport()
  {
    // Default settings used in HDevelop
    HOperatorSet.SetSystem("width", 512);
    HOperatorSet.SetSystem("height", 512);
    if (HalconAPI.isWindows)
      HOperatorSet.SetSystem("use_window_thread","true");
    action();
  }
#endif

  // Procedures 
  // Chapter: Develop
  // Short Description: Switch dev_update_pc, dev_update_var and dev_update_window to 'off'. 
  public void dev_update_off ()
  {

    // Initialize local and output iconic variables 
    //This procedure sets different update settings to 'off'.
    //This is useful to get the best performance and reduce overhead.
    //
    // dev_update_pc(...); only in hdevelop
    // dev_update_var(...); only in hdevelop
    // dev_update_window(...); only in hdevelop


    return;
  }

  // Local procedures 
  public void CalRect2DirectEdgeCenter (HTuple hv_Rect2Data, out HTuple hv_rightRow, 
      out HTuple hv_rightCol, out HTuple hv_LeftRow, out HTuple hv_LeftCol, out HTuple hv_TopRow, 
      out HTuple hv_TopCol, out HTuple hv_DownRow, out HTuple hv_DownCol)
  {



    // Local iconic variables 

    // Local control variables 

    HTuple hv_Roi_CenterRow = new HTuple(), hv_Roi_CenterCol = new HTuple();
    HTuple hv_Roi_Phi = new HTuple(), hv_Roi_Length1 = new HTuple();
    HTuple hv_Roi_Length2 = new HTuple(), hv_calAngle = new HTuple();
    // Initialize local and output iconic variables 
    hv_rightRow = new HTuple();
    hv_rightCol = new HTuple();
    hv_LeftRow = new HTuple();
    hv_LeftCol = new HTuple();
    hv_TopRow = new HTuple();
    hv_TopCol = new HTuple();
    hv_DownRow = new HTuple();
    hv_DownCol = new HTuple();
    hv_Roi_CenterRow.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_Roi_CenterRow = hv_Rect2Data.TupleSelect(
        0);
    }
    hv_Roi_CenterCol.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_Roi_CenterCol = hv_Rect2Data.TupleSelect(
        1);
    }
    hv_Roi_Phi.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_Roi_Phi = hv_Rect2Data.TupleSelect(
        2);
    }
    hv_Roi_Length1.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_Roi_Length1 = hv_Rect2Data.TupleSelect(
        3);
    }
    hv_Roi_Length2.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_Roi_Length2 = hv_Rect2Data.TupleSelect(
        4);
    }
    //以矩形方向作为右
    if ((int)((new HTuple((new HTuple(0)).TupleLessEqual(hv_Roi_Phi.TupleDeg()))).TupleAnd(
        new HTuple(((hv_Roi_Phi.TupleDeg())).TupleLessEqual(90)))) != 0)
    {
      hv_rightRow.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rightRow = hv_Roi_CenterRow-(hv_Roi_Length1*(hv_Roi_Phi.TupleSin()
          ));
      }
      hv_rightCol.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rightCol = hv_Roi_CenterCol+(hv_Roi_Length1*(hv_Roi_Phi.TupleCos()
          ));
      }
      hv_LeftRow.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_LeftRow = hv_Roi_CenterRow+(hv_Roi_Length1*(hv_Roi_Phi.TupleSin()
          ));
      }
      hv_LeftCol.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_LeftCol = hv_Roi_CenterCol-(hv_Roi_Length1*(hv_Roi_Phi.TupleCos()
          ));
      }
      hv_DownRow.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_DownRow = hv_Roi_CenterRow+(hv_Roi_Length2*(((((new HTuple(90)).TupleRad()
          )-hv_Roi_Phi)).TupleSin()));
      }
      hv_DownCol.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_DownCol = hv_Roi_CenterCol+(hv_Roi_Length2*(((((new HTuple(90)).TupleRad()
          )-hv_Roi_Phi)).TupleCos()));
      }
      hv_TopRow.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_TopRow = hv_Roi_CenterRow-(hv_Roi_Length2*(((((new HTuple(90)).TupleRad()
          )-hv_Roi_Phi)).TupleSin()));
      }
      hv_TopCol.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_TopCol = hv_Roi_CenterCol-(hv_Roi_Length2*(((((new HTuple(90)).TupleRad()
          )-hv_Roi_Phi)).TupleCos()));
      }
    }
    else if ((int)((new HTuple((new HTuple(90)).TupleLess(hv_Roi_Phi.TupleDeg()
        ))).TupleAnd(new HTuple((new HTuple(181)).TupleGreaterEqual(hv_Roi_Phi.TupleDeg()
        )))) != 0)
    {
      hv_calAngle.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_calAngle = ((new HTuple(180)).TupleRad()
          )-hv_Roi_Phi;
      }
      hv_rightRow.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rightRow = hv_Roi_CenterRow-(hv_Roi_Length1*(hv_calAngle.TupleSin()
          ));
      }
      hv_rightCol.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rightCol = hv_Roi_CenterCol-(hv_Roi_Length1*(hv_calAngle.TupleCos()
          ));
      }
      hv_LeftRow.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_LeftRow = hv_Roi_CenterRow+(hv_Roi_Length1*(hv_calAngle.TupleSin()
          ));
      }
      hv_LeftCol.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_LeftCol = hv_Roi_CenterCol+(hv_Roi_Length1*(hv_calAngle.TupleCos()
          ));
      }
      hv_TopRow.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_TopRow = hv_Roi_CenterRow+(hv_Roi_Length2*(((((new HTuple(90)).TupleRad()
          )-hv_calAngle)).TupleSin()));
      }
      hv_TopCol.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_TopCol = hv_Roi_CenterCol-(hv_Roi_Length2*(((((new HTuple(90)).TupleRad()
          )-hv_calAngle)).TupleCos()));
      }
      hv_DownRow.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_DownRow = hv_Roi_CenterRow-(hv_Roi_Length2*(((((new HTuple(90)).TupleRad()
          )-hv_calAngle)).TupleSin()));
      }
      hv_DownCol.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_DownCol = hv_Roi_CenterCol+(hv_Roi_Length2*(((((new HTuple(90)).TupleRad()
          )-hv_calAngle)).TupleCos()));
      }
    }
    else if ((int)((new HTuple((new HTuple(-90)).TupleGreaterEqual(hv_Roi_Phi.TupleDeg()
        ))).TupleAnd(new HTuple((new HTuple(-181)).TupleLessEqual(hv_Roi_Phi.TupleDeg()
        )))) != 0)
    {
      hv_calAngle.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_calAngle = ((-180+(hv_Roi_Phi.TupleDeg()
          ))).TupleRad();
      }
      hv_rightRow.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rightRow = hv_Roi_CenterRow+(hv_Roi_Length1*(hv_calAngle.TupleSin()
          ));
      }
      hv_rightCol.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rightCol = hv_Roi_CenterCol-(hv_Roi_Length1*(hv_calAngle.TupleCos()
          ));
      }
      hv_LeftRow.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_LeftRow = hv_Roi_CenterRow-(hv_Roi_Length1*(hv_calAngle.TupleSin()
          ));
      }
      hv_LeftCol.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_LeftCol = hv_Roi_CenterCol+(hv_Roi_Length1*(hv_calAngle.TupleCos()
          ));
      }
      hv_DownRow.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_DownRow = hv_Roi_CenterRow-(hv_Roi_Length2*(((((new HTuple(90)).TupleRad()
          )-hv_calAngle)).TupleSin()));
      }
      hv_DownCol.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_DownCol = hv_Roi_CenterCol-(hv_Roi_Length2*(((((new HTuple(90)).TupleRad()
          )-hv_calAngle)).TupleCos()));
      }
      hv_TopRow.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_TopRow = hv_Roi_CenterRow+(hv_Roi_Length2*(((((new HTuple(90)).TupleRad()
          )-hv_calAngle)).TupleSin()));
      }
      hv_TopCol.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_TopCol = hv_Roi_CenterCol+(hv_Roi_Length2*(((((new HTuple(90)).TupleRad()
          )-hv_calAngle)).TupleCos()));
      }
    }
    else if ((int)((new HTuple((new HTuple(-90)).TupleLess(hv_Roi_Phi.TupleDeg()
        ))).TupleAnd(new HTuple((new HTuple(0)).TupleGreater(hv_Roi_Phi.TupleDeg()
        )))) != 0)
    {
      hv_calAngle.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_calAngle = ((((hv_Roi_Phi.TupleDeg()
          )).TupleAbs())).TupleRad();
      }
      hv_rightRow.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rightRow = hv_Roi_CenterRow+(hv_Roi_Length1*(hv_calAngle.TupleSin()
          ));
      }
      hv_rightCol.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rightCol = hv_Roi_CenterCol+(hv_Roi_Length1*(hv_calAngle.TupleCos()
          ));
      }
      hv_LeftRow.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_LeftRow = hv_Roi_CenterRow-(hv_Roi_Length1*(hv_calAngle.TupleSin()
          ));
      }
      hv_LeftCol.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_LeftCol = hv_Roi_CenterCol-(hv_Roi_Length1*(hv_calAngle.TupleCos()
          ));
      }
      hv_TopRow.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_TopRow = hv_Roi_CenterRow-(hv_Roi_Length2*(((((new HTuple(90)).TupleRad()
          )-hv_calAngle)).TupleSin()));
      }
      hv_TopCol.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_TopCol = hv_Roi_CenterCol+(hv_Roi_Length2*(((((new HTuple(90)).TupleRad()
          )-hv_calAngle)).TupleCos()));
      }
      hv_DownRow.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_DownRow = hv_Roi_CenterRow+(hv_Roi_Length2*(((((new HTuple(90)).TupleRad()
          )-hv_calAngle)).TupleSin()));
      }
      hv_DownCol.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_DownCol = hv_Roi_CenterCol-(hv_Roi_Length2*(((((new HTuple(90)).TupleRad()
          )-hv_calAngle)).TupleCos()));
      }
    }

    hv_Roi_CenterRow.Dispose();
    hv_Roi_CenterCol.Dispose();
    hv_Roi_Phi.Dispose();
    hv_Roi_Length1.Dispose();
    hv_Roi_Length2.Dispose();
    hv_calAngle.Dispose();

    return;
  }

  public void CalRect2DirectEdgeCenter_COPY_1 (HTuple hv_Rect2Data, out HTuple hv_rightRow, 
      out HTuple hv_rightCol, out HTuple hv_LeftRow, out HTuple hv_LeftCol, out HTuple hv_TopRow, 
      out HTuple hv_TopCol, out HTuple hv_DownRow, out HTuple hv_DownCol)
  {



    // Local iconic variables 

    // Local control variables 

    HTuple hv_Roi_CenterRow = new HTuple(), hv_Roi_CenterCol = new HTuple();
    HTuple hv_Roi_Phi = new HTuple(), hv_Roi_Length1 = new HTuple();
    HTuple hv_Roi_Length2 = new HTuple(), hv_calAngle = new HTuple();
    // Initialize local and output iconic variables 
    hv_rightRow = new HTuple();
    hv_rightCol = new HTuple();
    hv_LeftRow = new HTuple();
    hv_LeftCol = new HTuple();
    hv_TopRow = new HTuple();
    hv_TopCol = new HTuple();
    hv_DownRow = new HTuple();
    hv_DownCol = new HTuple();
    hv_Roi_CenterRow.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_Roi_CenterRow = hv_Rect2Data.TupleSelect(
        0);
    }
    hv_Roi_CenterCol.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_Roi_CenterCol = hv_Rect2Data.TupleSelect(
        1);
    }
    hv_Roi_Phi.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_Roi_Phi = hv_Rect2Data.TupleSelect(
        2);
    }
    hv_Roi_Length1.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_Roi_Length1 = hv_Rect2Data.TupleSelect(
        3);
    }
    hv_Roi_Length2.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_Roi_Length2 = hv_Rect2Data.TupleSelect(
        4);
    }
    //以矩形方向作为右
    if ((int)((new HTuple((new HTuple(0)).TupleLessEqual(hv_Roi_Phi.TupleDeg()))).TupleAnd(
        new HTuple(((hv_Roi_Phi.TupleDeg())).TupleLessEqual(90)))) != 0)
    {
      hv_rightRow.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rightRow = hv_Roi_CenterRow-(hv_Roi_Length1*(hv_Roi_Phi.TupleSin()
          ));
      }
      hv_rightCol.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rightCol = hv_Roi_CenterCol+(hv_Roi_Length1*(hv_Roi_Phi.TupleCos()
          ));
      }
      hv_LeftRow.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_LeftRow = hv_Roi_CenterRow+(hv_Roi_Length1*(hv_Roi_Phi.TupleSin()
          ));
      }
      hv_LeftCol.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_LeftCol = hv_Roi_CenterCol-(hv_Roi_Length1*(hv_Roi_Phi.TupleCos()
          ));
      }
      hv_DownRow.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_DownRow = hv_Roi_CenterRow+(hv_Roi_Length2*(((((new HTuple(90)).TupleRad()
          )-hv_Roi_Phi)).TupleSin()));
      }
      hv_DownCol.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_DownCol = hv_Roi_CenterCol+(hv_Roi_Length2*(((((new HTuple(90)).TupleRad()
          )-hv_Roi_Phi)).TupleCos()));
      }
      hv_TopRow.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_TopRow = hv_Roi_CenterRow-(hv_Roi_Length2*(((((new HTuple(90)).TupleRad()
          )-hv_Roi_Phi)).TupleSin()));
      }
      hv_TopCol.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_TopCol = hv_Roi_CenterCol-(hv_Roi_Length2*(((((new HTuple(90)).TupleRad()
          )-hv_Roi_Phi)).TupleCos()));
      }
    }
    else if ((int)((new HTuple((new HTuple(90)).TupleLess(hv_Roi_Phi.TupleDeg()
        ))).TupleAnd(new HTuple((new HTuple(181)).TupleGreaterEqual(hv_Roi_Phi.TupleDeg()
        )))) != 0)
    {
      hv_calAngle.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_calAngle = ((new HTuple(180)).TupleRad()
          )-hv_Roi_Phi;
      }
      hv_rightRow.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rightRow = hv_Roi_CenterRow-(hv_Roi_Length1*(hv_calAngle.TupleSin()
          ));
      }
      hv_rightCol.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rightCol = hv_Roi_CenterCol-(hv_Roi_Length1*(hv_calAngle.TupleCos()
          ));
      }
      hv_LeftRow.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_LeftRow = hv_Roi_CenterRow+(hv_Roi_Length1*(hv_calAngle.TupleSin()
          ));
      }
      hv_LeftCol.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_LeftCol = hv_Roi_CenterCol+(hv_Roi_Length1*(hv_calAngle.TupleCos()
          ));
      }
      hv_TopRow.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_TopRow = hv_Roi_CenterRow+(hv_Roi_Length2*(((((new HTuple(90)).TupleRad()
          )-hv_calAngle)).TupleSin()));
      }
      hv_TopCol.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_TopCol = hv_Roi_CenterCol-(hv_Roi_Length2*(((((new HTuple(90)).TupleRad()
          )-hv_calAngle)).TupleCos()));
      }
      hv_DownRow.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_DownRow = hv_Roi_CenterRow-(hv_Roi_Length2*(((((new HTuple(90)).TupleRad()
          )-hv_calAngle)).TupleSin()));
      }
      hv_DownCol.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_DownCol = hv_Roi_CenterCol+(hv_Roi_Length2*(((((new HTuple(90)).TupleRad()
          )-hv_calAngle)).TupleCos()));
      }
    }
    else if ((int)((new HTuple((new HTuple(-90)).TupleGreaterEqual(hv_Roi_Phi.TupleDeg()
        ))).TupleAnd(new HTuple((new HTuple(-181)).TupleLessEqual(hv_Roi_Phi.TupleDeg()
        )))) != 0)
    {
      hv_calAngle.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_calAngle = ((-180+(hv_Roi_Phi.TupleDeg()
          ))).TupleRad();
      }
      hv_rightRow.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rightRow = hv_Roi_CenterRow+(hv_Roi_Length1*(hv_calAngle.TupleSin()
          ));
      }
      hv_rightCol.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rightCol = hv_Roi_CenterCol-(hv_Roi_Length1*(hv_calAngle.TupleCos()
          ));
      }
      hv_LeftRow.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_LeftRow = hv_Roi_CenterRow-(hv_Roi_Length1*(hv_calAngle.TupleSin()
          ));
      }
      hv_LeftCol.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_LeftCol = hv_Roi_CenterCol+(hv_Roi_Length1*(hv_calAngle.TupleCos()
          ));
      }
      hv_DownRow.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_DownRow = hv_Roi_CenterRow-(hv_Roi_Length2*(((((new HTuple(90)).TupleRad()
          )-hv_calAngle)).TupleSin()));
      }
      hv_DownCol.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_DownCol = hv_Roi_CenterCol-(hv_Roi_Length2*(((((new HTuple(90)).TupleRad()
          )-hv_calAngle)).TupleCos()));
      }
      hv_TopRow.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_TopRow = hv_Roi_CenterRow+(hv_Roi_Length2*(((((new HTuple(90)).TupleRad()
          )-hv_calAngle)).TupleSin()));
      }
      hv_TopCol.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_TopCol = hv_Roi_CenterCol+(hv_Roi_Length2*(((((new HTuple(90)).TupleRad()
          )-hv_calAngle)).TupleCos()));
      }
    }
    else if ((int)((new HTuple((new HTuple(-90)).TupleLess(hv_Roi_Phi.TupleDeg()
        ))).TupleAnd(new HTuple((new HTuple(0)).TupleGreater(hv_Roi_Phi.TupleDeg()
        )))) != 0)
    {
      hv_calAngle.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_calAngle = ((((hv_Roi_Phi.TupleDeg()
          )).TupleAbs())).TupleRad();
      }
      hv_rightRow.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rightRow = hv_Roi_CenterRow+(hv_Roi_Length1*(hv_calAngle.TupleSin()
          ));
      }
      hv_rightCol.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rightCol = hv_Roi_CenterCol+(hv_Roi_Length1*(hv_calAngle.TupleCos()
          ));
      }
      hv_LeftRow.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_LeftRow = hv_Roi_CenterRow-(hv_Roi_Length1*(hv_calAngle.TupleSin()
          ));
      }
      hv_LeftCol.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_LeftCol = hv_Roi_CenterCol-(hv_Roi_Length1*(hv_calAngle.TupleCos()
          ));
      }
      hv_TopRow.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_TopRow = hv_Roi_CenterRow-(hv_Roi_Length2*(((((new HTuple(90)).TupleRad()
          )-hv_calAngle)).TupleSin()));
      }
      hv_TopCol.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_TopCol = hv_Roi_CenterCol+(hv_Roi_Length2*(((((new HTuple(90)).TupleRad()
          )-hv_calAngle)).TupleCos()));
      }
      hv_DownRow.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_DownRow = hv_Roi_CenterRow+(hv_Roi_Length2*(((((new HTuple(90)).TupleRad()
          )-hv_calAngle)).TupleSin()));
      }
      hv_DownCol.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_DownCol = hv_Roi_CenterCol-(hv_Roi_Length2*(((((new HTuple(90)).TupleRad()
          )-hv_calAngle)).TupleCos()));
      }
    }

    hv_Roi_CenterRow.Dispose();
    hv_Roi_CenterCol.Dispose();
    hv_Roi_Phi.Dispose();
    hv_Roi_Length1.Dispose();
    hv_Roi_Length2.Dispose();
    hv_calAngle.Dispose();

    return;
  }

  public void CalRect2EdgeCenter (HTuple hv_Row, HTuple hv_Column, HTuple hv_Phi, 
      HTuple hv_Length1, HTuple hv_Length2, HTuple hv_ExtenRatio, out HTuple hv_TopRow, 
      out HTuple hv_TopCol, out HTuple hv_DownRow, out HTuple hv_DownCol, out HTuple hv_LeftRow, 
      out HTuple hv_LeftCol, out HTuple hv_RightRow, out HTuple hv_RightCol)
  {



    // Local iconic variables 

    // Local control variables 

    HTuple hv_PhiOut = new HTuple(), hv_du = new HTuple();
    // Initialize local and output iconic variables 
    hv_TopRow = new HTuple();
    hv_TopCol = new HTuple();
    hv_DownRow = new HTuple();
    hv_DownCol = new HTuple();
    hv_LeftRow = new HTuple();
    hv_LeftCol = new HTuple();
    hv_RightRow = new HTuple();
    hv_RightCol = new HTuple();
    hv_PhiOut.Dispose();
    hv_PhiOut = new HTuple(hv_Phi);
    hv_du.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_du = hv_PhiOut.TupleDeg()
        ;
    }
    if ((int)((new HTuple((new HTuple(hv_du.TupleGreaterEqual(0))).TupleAnd(new HTuple(hv_du.TupleLessEqual(
        90))))).TupleOr((new HTuple(hv_du.TupleLess(-90))).TupleAnd(new HTuple(hv_du.TupleGreaterEqual(
        -180))))) != 0)
    {
      if ((int)(new HTuple(hv_du.TupleLess(0))) != 0)
      {
        using (HDevDisposeHelper dh = new HDevDisposeHelper())
        {
        {
        HTuple 
          ExpTmpLocalVar_PhiOut = hv_PhiOut+((new HTuple(180)).TupleRad()
            );
        hv_PhiOut.Dispose();
        hv_PhiOut = ExpTmpLocalVar_PhiOut;
        }
        }
      }
      hv_TopRow.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_TopRow = hv_Row-((hv_Length1*hv_ExtenRatio)*(hv_PhiOut.TupleSin()
          ));
      }
      hv_TopCol.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_TopCol = hv_Column+((hv_Length1*hv_ExtenRatio)*(hv_PhiOut.TupleCos()
          ));
      }
      hv_DownRow.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_DownRow = hv_Row+((hv_Length1*hv_ExtenRatio)*(hv_PhiOut.TupleSin()
          ));
      }
      hv_DownCol.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_DownCol = hv_Column-((hv_Length1*hv_ExtenRatio)*(hv_PhiOut.TupleCos()
          ));
      }
      hv_LeftRow.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_LeftRow = hv_Row-((hv_Length2*hv_ExtenRatio)*(((((new HTuple(90)).TupleRad()
          )-hv_PhiOut)).TupleSin()));
      }
      hv_LeftCol.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_LeftCol = hv_Column-((hv_Length2*hv_ExtenRatio)*(((((new HTuple(90)).TupleRad()
          )-hv_PhiOut)).TupleCos()));
      }
      hv_RightRow.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_RightRow = hv_Row+((hv_Length2*hv_ExtenRatio)*(((((new HTuple(90)).TupleRad()
          )-hv_PhiOut)).TupleSin()));
      }
      hv_RightCol.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_RightCol = hv_Column+((hv_Length2*hv_ExtenRatio)*(((((new HTuple(90)).TupleRad()
          )-hv_PhiOut)).TupleCos()));
      }
    }
    else if ((int)((new HTuple((new HTuple(hv_du.TupleGreater(90))).TupleAnd(
        new HTuple(hv_du.TupleLessEqual(180))))).TupleOr((new HTuple(hv_du.TupleLess(
        0))).TupleAnd(new HTuple(hv_du.TupleGreaterEqual(-90))))) != 0)
    {
      if ((int)(new HTuple(hv_du.TupleLess(0))) != 0)
      {
        using (HDevDisposeHelper dh = new HDevDisposeHelper())
        {
        {
        HTuple 
          ExpTmpLocalVar_PhiOut = hv_PhiOut+((new HTuple(180)).TupleRad()
            );
        hv_PhiOut.Dispose();
        hv_PhiOut = ExpTmpLocalVar_PhiOut;
        }
        }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_PhiOut = hv_PhiOut-((new HTuple(90)).TupleRad()
          );
      hv_PhiOut.Dispose();
      hv_PhiOut = ExpTmpLocalVar_PhiOut;
      }
      }
      hv_TopRow.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_TopRow = hv_Row-((hv_Length1*hv_ExtenRatio)*(hv_PhiOut.TupleCos()
          ));
      }
      hv_TopCol.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_TopCol = hv_Column-((hv_Length1*hv_ExtenRatio)*(hv_PhiOut.TupleSin()
          ));
      }
      hv_DownRow.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_DownRow = hv_Row+((hv_Length1*hv_ExtenRatio)*(hv_PhiOut.TupleCos()
          ));
      }
      hv_DownCol.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_DownCol = hv_Column+((hv_Length1*hv_ExtenRatio)*(hv_PhiOut.TupleSin()
          ));
      }
      hv_LeftRow.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_LeftRow = hv_Row+((hv_Length2*hv_ExtenRatio)*(hv_PhiOut.TupleSin()
          ));
      }
      hv_LeftCol.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_LeftCol = hv_Column-((hv_Length2*hv_ExtenRatio)*(hv_PhiOut.TupleCos()
          ));
      }
      hv_RightRow.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_RightRow = hv_Row-((hv_Length2*hv_ExtenRatio)*(hv_PhiOut.TupleSin()
          ));
      }
      hv_RightCol.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_RightCol = hv_Column+((hv_Length2*hv_ExtenRatio)*(hv_PhiOut.TupleCos()
          ));
      }
    }

    hv_PhiOut.Dispose();
    hv_du.Dispose();

    return;
  }

  public void CalRect2EdgeCenter_COPY_1 (HTuple hv_Row, HTuple hv_Column, HTuple hv_Phi, 
      HTuple hv_Length1, HTuple hv_Length2, HTuple hv_ExtenRatio, out HTuple hv_TopRow, 
      out HTuple hv_TopCol, out HTuple hv_DownRow, out HTuple hv_DownCol, out HTuple hv_LeftRow, 
      out HTuple hv_LeftCol, out HTuple hv_RightRow, out HTuple hv_RightCol)
  {



    // Local iconic variables 

    // Local control variables 

    HTuple hv_PhiOut = new HTuple(), hv_du = new HTuple();
    // Initialize local and output iconic variables 
    hv_TopRow = new HTuple();
    hv_TopCol = new HTuple();
    hv_DownRow = new HTuple();
    hv_DownCol = new HTuple();
    hv_LeftRow = new HTuple();
    hv_LeftCol = new HTuple();
    hv_RightRow = new HTuple();
    hv_RightCol = new HTuple();
    hv_PhiOut.Dispose();
    hv_PhiOut = new HTuple(hv_Phi);
    hv_du.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_du = hv_PhiOut.TupleDeg()
        ;
    }
    if ((int)((new HTuple((new HTuple(hv_du.TupleGreaterEqual(0))).TupleAnd(new HTuple(hv_du.TupleLessEqual(
        90))))).TupleOr((new HTuple(hv_du.TupleLess(-90))).TupleAnd(new HTuple(hv_du.TupleGreaterEqual(
        -180))))) != 0)
    {
      if ((int)(new HTuple(hv_du.TupleLess(0))) != 0)
      {
        using (HDevDisposeHelper dh = new HDevDisposeHelper())
        {
        {
        HTuple 
          ExpTmpLocalVar_PhiOut = hv_PhiOut+((new HTuple(180)).TupleRad()
            );
        hv_PhiOut.Dispose();
        hv_PhiOut = ExpTmpLocalVar_PhiOut;
        }
        }
      }
      hv_TopRow.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_TopRow = hv_Row-((hv_Length1*hv_ExtenRatio)*(hv_PhiOut.TupleSin()
          ));
      }
      hv_TopCol.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_TopCol = hv_Column+((hv_Length1*hv_ExtenRatio)*(hv_PhiOut.TupleCos()
          ));
      }
      hv_DownRow.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_DownRow = hv_Row+((hv_Length1*hv_ExtenRatio)*(hv_PhiOut.TupleSin()
          ));
      }
      hv_DownCol.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_DownCol = hv_Column-((hv_Length1*hv_ExtenRatio)*(hv_PhiOut.TupleCos()
          ));
      }
      hv_LeftRow.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_LeftRow = hv_Row-((hv_Length2*hv_ExtenRatio)*(((((new HTuple(90)).TupleRad()
          )-hv_PhiOut)).TupleSin()));
      }
      hv_LeftCol.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_LeftCol = hv_Column-((hv_Length2*hv_ExtenRatio)*(((((new HTuple(90)).TupleRad()
          )-hv_PhiOut)).TupleCos()));
      }
      hv_RightRow.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_RightRow = hv_Row+((hv_Length2*hv_ExtenRatio)*(((((new HTuple(90)).TupleRad()
          )-hv_PhiOut)).TupleSin()));
      }
      hv_RightCol.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_RightCol = hv_Column+((hv_Length2*hv_ExtenRatio)*(((((new HTuple(90)).TupleRad()
          )-hv_PhiOut)).TupleCos()));
      }
    }
    else if ((int)((new HTuple((new HTuple(hv_du.TupleGreater(90))).TupleAnd(
        new HTuple(hv_du.TupleLessEqual(180))))).TupleOr((new HTuple(hv_du.TupleLess(
        0))).TupleAnd(new HTuple(hv_du.TupleGreaterEqual(-90))))) != 0)
    {
      if ((int)(new HTuple(hv_du.TupleLess(0))) != 0)
      {
        using (HDevDisposeHelper dh = new HDevDisposeHelper())
        {
        {
        HTuple 
          ExpTmpLocalVar_PhiOut = hv_PhiOut+((new HTuple(180)).TupleRad()
            );
        hv_PhiOut.Dispose();
        hv_PhiOut = ExpTmpLocalVar_PhiOut;
        }
        }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_PhiOut = hv_PhiOut-((new HTuple(90)).TupleRad()
          );
      hv_PhiOut.Dispose();
      hv_PhiOut = ExpTmpLocalVar_PhiOut;
      }
      }
      hv_TopRow.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_TopRow = hv_Row-((hv_Length1*hv_ExtenRatio)*(hv_PhiOut.TupleCos()
          ));
      }
      hv_TopCol.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_TopCol = hv_Column-((hv_Length1*hv_ExtenRatio)*(hv_PhiOut.TupleSin()
          ));
      }
      hv_DownRow.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_DownRow = hv_Row+((hv_Length1*hv_ExtenRatio)*(hv_PhiOut.TupleCos()
          ));
      }
      hv_DownCol.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_DownCol = hv_Column+((hv_Length1*hv_ExtenRatio)*(hv_PhiOut.TupleSin()
          ));
      }
      hv_LeftRow.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_LeftRow = hv_Row+((hv_Length2*hv_ExtenRatio)*(hv_PhiOut.TupleSin()
          ));
      }
      hv_LeftCol.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_LeftCol = hv_Column-((hv_Length2*hv_ExtenRatio)*(hv_PhiOut.TupleCos()
          ));
      }
      hv_RightRow.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_RightRow = hv_Row-((hv_Length2*hv_ExtenRatio)*(hv_PhiOut.TupleSin()
          ));
      }
      hv_RightCol.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_RightCol = hv_Column+((hv_Length2*hv_ExtenRatio)*(hv_PhiOut.TupleCos()
          ));
      }
    }

    hv_PhiOut.Dispose();
    hv_du.Dispose();

    return;
  }

  public void CalSilverSize (HObject ho_Image, HTuple hv_Rect2Data, out HTuple hv_OutputDict, 
      out HTuple hv_ErrorLog)
  {




    // Stack for temporary objects 
    HObject[] OTemp = new HObject[20];

    // Local iconic variables 

    HObject ho_SelectedRegions1, ho_SortRegion;
    HObject ho_AgRegions, ho_ObjectSelected=null, ho_Rectangle2=null;
    HObject ho_RegionIntersection=null, ho_Rectangle3=null;
    HObject ho_RegionIntersection1=null, ho_Rectangle1=null;

    // Local control variables 

    HTuple hv_Number = new HTuple(), hv_CenterLineData = new HTuple();
    HTuple hv_ExtenRatio = new HTuple(), hv_RowEdgeTops = new HTuple();
    HTuple hv_ColumnEdgeTops = new HTuple(), hv_RowEdgeDowns = new HTuple();
    HTuple hv_ColumnEdgeDowns = new HTuple(), hv_RowEdgeLefts = new HTuple();
    HTuple hv_ColumnEdgeLefts = new HTuple(), hv_RowEdgeRights = new HTuple();
    HTuple hv_ColumnEdgeRights = new HTuple(), hv_Number1 = new HTuple();
    HTuple hv_Index = new HTuple(), hv_Phi1 = new HTuple();
    HTuple hv_Area = new HTuple(), hv_Row1 = new HTuple();
    HTuple hv_Column1 = new HTuple(), hv_Row22 = new HTuple();
    HTuple hv_Column22 = new HTuple(), hv_Phi22 = new HTuple();
    HTuple hv_Length21 = new HTuple(), hv_Length22 = new HTuple();
    HTuple hv_Row = new HTuple(), hv_Column = new HTuple();
    HTuple hv_Phi = new HTuple(), hv_Length1 = new HTuple();
    HTuple hv_Length2 = new HTuple(), hv_TopRow = new HTuple();
    HTuple hv_TopCol = new HTuple(), hv_DownRow = new HTuple();
    HTuple hv_DownCol = new HTuple(), hv_LeftRow = new HTuple();
    HTuple hv_LeftCol = new HTuple(), hv_RightRow = new HTuple();
    HTuple hv_RightCol = new HTuple(), hv_RowEdgeTop = new HTuple();
    HTuple hv_ColumnEdgeTop = new HTuple(), hv_RowEdgeDown = new HTuple();
    HTuple hv_ColumnEdgeDown = new HTuple(), hv_RowEdgeLeft = new HTuple();
    HTuple hv_ColumnEdgeLeft = new HTuple(), hv_RowEdgeRight = new HTuple();
    HTuple hv_ColumnEdgeRight = new HTuple(), hv_DirectRows = new HTuple();
    HTuple hv_DirectCols = new HTuple(), hv_CuEdgeRows = new HTuple();
    HTuple hv_CuEdgeColumns = new HTuple(), hv_ErrorLog1 = new HTuple();
    // Initialize local and output iconic variables 
    HOperatorSet.GenEmptyObj(out ho_SelectedRegions1);
    HOperatorSet.GenEmptyObj(out ho_SortRegion);
    HOperatorSet.GenEmptyObj(out ho_AgRegions);
    HOperatorSet.GenEmptyObj(out ho_ObjectSelected);
    HOperatorSet.GenEmptyObj(out ho_Rectangle2);
    HOperatorSet.GenEmptyObj(out ho_RegionIntersection);
    HOperatorSet.GenEmptyObj(out ho_Rectangle3);
    HOperatorSet.GenEmptyObj(out ho_RegionIntersection1);
    HOperatorSet.GenEmptyObj(out ho_Rectangle1);
    hv_OutputDict = new HTuple();
    hv_ErrorLog = new HTuple();
    hv_Rect2Data[2]=-hv_Rect2Data[2].D;//C#ROI方向为反
    hv_ErrorLog.Dispose();
    hv_ErrorLog = new HTuple();
    ho_SelectedRegions1.Dispose();hv_Number.Dispose();
    GetSilver(ho_Image, out ho_SelectedRegions1, hv_Rect2Data, out hv_Number);

    //按照ROI的方向将4条银浆排序
    ho_SortRegion.Dispose();hv_CenterLineData.Dispose();
    FollowRoiDirectSortRegion(ho_SelectedRegions1, out ho_SortRegion, hv_Rect2Data, 
        out hv_CenterLineData);

    hv_OutputDict.Dispose();
    HOperatorSet.CreateDict(out hv_OutputDict);

    hv_ExtenRatio.Dispose();
    hv_ExtenRatio = 1.3;
    hv_RowEdgeTops.Dispose();
    hv_RowEdgeTops = new HTuple();
    hv_ColumnEdgeTops.Dispose();
    hv_ColumnEdgeTops = new HTuple();
    hv_RowEdgeDowns.Dispose();
    hv_RowEdgeDowns = new HTuple();
    hv_ColumnEdgeDowns.Dispose();
    hv_ColumnEdgeDowns = new HTuple();
    hv_RowEdgeLefts.Dispose();
    hv_RowEdgeLefts = new HTuple();
    hv_ColumnEdgeLefts.Dispose();
    hv_ColumnEdgeLefts = new HTuple();
    hv_RowEdgeRights.Dispose();
    hv_RowEdgeRights = new HTuple();
    hv_ColumnEdgeRights.Dispose();
    hv_ColumnEdgeRights = new HTuple();
    hv_Number1.Dispose();
    HOperatorSet.CountObj(ho_SortRegion, out hv_Number1);

    ho_AgRegions.Dispose();
    HOperatorSet.GenEmptyRegion(out ho_AgRegions);
    HTuple end_val21 = hv_Number1;
    HTuple step_val21 = 1;
    for (hv_Index=1; hv_Index.Continue(end_val21, step_val21); hv_Index = hv_Index.TupleAdd(step_val21))
    {
      ho_ObjectSelected.Dispose();
      HOperatorSet.SelectObj(ho_SortRegion, out ho_ObjectSelected, hv_Index);
      hv_Phi1.Dispose();
      HOperatorSet.OrientationRegion(ho_ObjectSelected, out hv_Phi1);

      hv_Area.Dispose();hv_Row1.Dispose();hv_Column1.Dispose();
      HOperatorSet.AreaCenter(ho_ObjectSelected, out hv_Area, out hv_Row1, out hv_Column1);
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      ho_Rectangle2.Dispose();
      HOperatorSet.GenRectangle2(out ho_Rectangle2, hv_Row1, hv_Column1, hv_Phi1+((new HTuple(90)).TupleRad()
          ), 30, 15);
      }
      ho_RegionIntersection.Dispose();
      HOperatorSet.Intersection(ho_ObjectSelected, ho_Rectangle2, out ho_RegionIntersection
          );
      hv_Row22.Dispose();hv_Column22.Dispose();hv_Phi22.Dispose();hv_Length21.Dispose();hv_Length22.Dispose();
      HOperatorSet.SmallestRectangle2(ho_RegionIntersection, out hv_Row22, out hv_Column22, 
          out hv_Phi22, out hv_Length21, out hv_Length22);
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      ho_Rectangle3.Dispose();
      HOperatorSet.GenRectangle2(out ho_Rectangle3, hv_Row22, hv_Column22, hv_Phi22, 
          hv_Length21*10, hv_Length22);
      }
      ho_RegionIntersection1.Dispose();
      HOperatorSet.Intersection(ho_ObjectSelected, ho_Rectangle3, out ho_RegionIntersection1
          );
      {
      HObject ExpTmpOutVar_0;
      HOperatorSet.ConcatObj(ho_AgRegions, ho_RegionIntersection1, out ExpTmpOutVar_0
          );
      ho_AgRegions.Dispose();
      ho_AgRegions = ExpTmpOutVar_0;
      }
      hv_Row.Dispose();hv_Column.Dispose();hv_Phi.Dispose();hv_Length1.Dispose();hv_Length2.Dispose();
      HOperatorSet.SmallestRectangle2(ho_RegionIntersection1, out hv_Row, out hv_Column, 
          out hv_Phi, out hv_Length1, out hv_Length2);
      ho_Rectangle1.Dispose();
      HOperatorSet.GenRectangle2(out ho_Rectangle1, hv_Row, hv_Column, hv_Phi, hv_Length1, 
          hv_Length2);
      hv_TopRow.Dispose();hv_TopCol.Dispose();hv_DownRow.Dispose();hv_DownCol.Dispose();hv_LeftRow.Dispose();hv_LeftCol.Dispose();hv_RightRow.Dispose();hv_RightCol.Dispose();
      CalRect2EdgeCenter(hv_Row, hv_Column, hv_Phi, hv_Length1, hv_Length2, hv_ExtenRatio, 
          out hv_TopRow, out hv_TopCol, out hv_DownRow, out hv_DownCol, out hv_LeftRow, 
          out hv_LeftCol, out hv_RightRow, out hv_RightCol);


      hv_RowEdgeTop.Dispose();hv_ColumnEdgeTop.Dispose();
      FindEdgePoint(ho_Image, hv_Row, hv_Column, hv_TopRow, hv_TopCol, hv_Length2, 
          out hv_RowEdgeTop, out hv_ColumnEdgeTop);
      hv_RowEdgeDown.Dispose();hv_ColumnEdgeDown.Dispose();
      FindEdgePoint(ho_Image, hv_Row, hv_Column, hv_DownRow, hv_DownCol, hv_Length2, 
          out hv_RowEdgeDown, out hv_ColumnEdgeDown);
      hv_RowEdgeLeft.Dispose();hv_ColumnEdgeLeft.Dispose();
      FindEdgePoint(ho_Image, hv_Row, hv_Column, hv_LeftRow, hv_LeftCol, hv_Length1, 
          out hv_RowEdgeLeft, out hv_ColumnEdgeLeft);
      hv_RowEdgeRight.Dispose();hv_ColumnEdgeRight.Dispose();
      FindEdgePoint(ho_Image, hv_Row, hv_Column, hv_RightRow, hv_RightCol, hv_Length1, 
          out hv_RowEdgeRight, out hv_ColumnEdgeRight);
      if ((int)(new HTuple((new HTuple((((new HTuple(hv_RowEdgeTop.TupleLength()))+(new HTuple(hv_RowEdgeDown.TupleLength()
          )))+(new HTuple(hv_RowEdgeLeft.TupleLength())))+(new HTuple(hv_RowEdgeRight.TupleLength()
          )))).TupleNotEqual(4))) != 0)
      {
        using (HDevDisposeHelper dh = new HDevDisposeHelper())
        {
        {
        HTuple 
          ExpTmpLocalVar_ErrorLog = hv_ErrorLog.TupleConcat(
            "Ag边缘查找失败");
        hv_ErrorLog.Dispose();
        hv_ErrorLog = ExpTmpLocalVar_ErrorLog;
        }
        }
        ho_SelectedRegions1.Dispose();
        ho_SortRegion.Dispose();
        ho_AgRegions.Dispose();
        ho_ObjectSelected.Dispose();
        ho_Rectangle2.Dispose();
        ho_RegionIntersection.Dispose();
        ho_Rectangle3.Dispose();
        ho_RegionIntersection1.Dispose();
        ho_Rectangle1.Dispose();

        hv_Number.Dispose();
        hv_CenterLineData.Dispose();
        hv_ExtenRatio.Dispose();
        hv_RowEdgeTops.Dispose();
        hv_ColumnEdgeTops.Dispose();
        hv_RowEdgeDowns.Dispose();
        hv_ColumnEdgeDowns.Dispose();
        hv_RowEdgeLefts.Dispose();
        hv_ColumnEdgeLefts.Dispose();
        hv_RowEdgeRights.Dispose();
        hv_ColumnEdgeRights.Dispose();
        hv_Number1.Dispose();
        hv_Index.Dispose();
        hv_Phi1.Dispose();
        hv_Area.Dispose();
        hv_Row1.Dispose();
        hv_Column1.Dispose();
        hv_Row22.Dispose();
        hv_Column22.Dispose();
        hv_Phi22.Dispose();
        hv_Length21.Dispose();
        hv_Length22.Dispose();
        hv_Row.Dispose();
        hv_Column.Dispose();
        hv_Phi.Dispose();
        hv_Length1.Dispose();
        hv_Length2.Dispose();
        hv_TopRow.Dispose();
        hv_TopCol.Dispose();
        hv_DownRow.Dispose();
        hv_DownCol.Dispose();
        hv_LeftRow.Dispose();
        hv_LeftCol.Dispose();
        hv_RightRow.Dispose();
        hv_RightCol.Dispose();
        hv_RowEdgeTop.Dispose();
        hv_ColumnEdgeTop.Dispose();
        hv_RowEdgeDown.Dispose();
        hv_ColumnEdgeDown.Dispose();
        hv_RowEdgeLeft.Dispose();
        hv_ColumnEdgeLeft.Dispose();
        hv_RowEdgeRight.Dispose();
        hv_ColumnEdgeRight.Dispose();
        hv_DirectRows.Dispose();
        hv_DirectCols.Dispose();
        hv_CuEdgeRows.Dispose();
        hv_CuEdgeColumns.Dispose();
        hv_ErrorLog1.Dispose();

        return;
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_DirectRows.Dispose();hv_DirectCols.Dispose();
      DirectPoints(((((hv_RowEdgeTop.TupleConcat(hv_RowEdgeDown))).TupleConcat(hv_RowEdgeLeft))).TupleConcat(
          hv_RowEdgeRight), ((((hv_ColumnEdgeTop.TupleConcat(hv_ColumnEdgeDown))).TupleConcat(
          hv_ColumnEdgeLeft))).TupleConcat(hv_ColumnEdgeRight), hv_CenterLineData, 
          out hv_DirectRows, out hv_DirectCols);
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_RowEdgeTops = hv_RowEdgeTops.TupleConcat(
          hv_DirectRows.TupleSelect(0));
      hv_RowEdgeTops.Dispose();
      hv_RowEdgeTops = ExpTmpLocalVar_RowEdgeTops;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_ColumnEdgeTops = hv_ColumnEdgeTops.TupleConcat(
          hv_DirectCols.TupleSelect(0));
      hv_ColumnEdgeTops.Dispose();
      hv_ColumnEdgeTops = ExpTmpLocalVar_ColumnEdgeTops;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_RowEdgeDowns = hv_RowEdgeDowns.TupleConcat(
          hv_DirectRows.TupleSelect(1));
      hv_RowEdgeDowns.Dispose();
      hv_RowEdgeDowns = ExpTmpLocalVar_RowEdgeDowns;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_ColumnEdgeDowns = hv_ColumnEdgeDowns.TupleConcat(
          hv_DirectCols.TupleSelect(1));
      hv_ColumnEdgeDowns.Dispose();
      hv_ColumnEdgeDowns = ExpTmpLocalVar_ColumnEdgeDowns;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_RowEdgeLefts = hv_RowEdgeLefts.TupleConcat(
          hv_DirectRows.TupleSelect(2));
      hv_RowEdgeLefts.Dispose();
      hv_RowEdgeLefts = ExpTmpLocalVar_RowEdgeLefts;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_ColumnEdgeLefts = hv_ColumnEdgeLefts.TupleConcat(
          hv_DirectCols.TupleSelect(2));
      hv_ColumnEdgeLefts.Dispose();
      hv_ColumnEdgeLefts = ExpTmpLocalVar_ColumnEdgeLefts;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_RowEdgeRights = hv_RowEdgeRights.TupleConcat(
          hv_DirectRows.TupleSelect(3));
      hv_RowEdgeRights.Dispose();
      hv_RowEdgeRights = ExpTmpLocalVar_RowEdgeRights;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_ColumnEdgeRights = hv_ColumnEdgeRights.TupleConcat(
          hv_DirectCols.TupleSelect(3));
      hv_ColumnEdgeRights.Dispose();
      hv_ColumnEdgeRights = ExpTmpLocalVar_ColumnEdgeRights;
      }
      }
    }

    //获取铜片的边缘点
    hv_CuEdgeRows.Dispose();hv_CuEdgeColumns.Dispose();hv_ErrorLog1.Dispose();
    GetCu(ho_Image, ho_AgRegions, hv_Rect2Data, hv_CenterLineData, out hv_CuEdgeRows, 
        out hv_CuEdgeColumns, out hv_ErrorLog1);
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_ErrorLog = hv_ErrorLog.TupleConcat(
        hv_ErrorLog1);
    hv_ErrorLog.Dispose();
    hv_ErrorLog = ExpTmpLocalVar_ErrorLog;
    }
    }

    HOperatorSet.SetDictTuple(hv_OutputDict, "CuEdgeRows", hv_CuEdgeRows);
    HOperatorSet.SetDictTuple(hv_OutputDict, "CuEdgeColumns", hv_CuEdgeColumns);
    HOperatorSet.SetDictTuple(hv_OutputDict, "RowEdgeTops", hv_RowEdgeTops);
    HOperatorSet.SetDictTuple(hv_OutputDict, "ColumnEdgeTops", hv_ColumnEdgeTops);
    HOperatorSet.SetDictTuple(hv_OutputDict, "RowEdgeDowns", hv_RowEdgeDowns);
    HOperatorSet.SetDictTuple(hv_OutputDict, "ColumnEdgeDowns", hv_ColumnEdgeDowns);
    HOperatorSet.SetDictTuple(hv_OutputDict, "RowEdgeLefts", hv_RowEdgeLefts);
    HOperatorSet.SetDictTuple(hv_OutputDict, "ColumnEdgeLefts", hv_ColumnEdgeLefts);
    HOperatorSet.SetDictTuple(hv_OutputDict, "RowEdgeRights", hv_RowEdgeRights);
    HOperatorSet.SetDictTuple(hv_OutputDict, "ColumnEdgeRights", hv_ColumnEdgeRights);
    HOperatorSet.SetDictTuple(hv_OutputDict, "SilverNumber", hv_Number1);
    ho_SelectedRegions1.Dispose();
    ho_SortRegion.Dispose();
    ho_AgRegions.Dispose();
    ho_ObjectSelected.Dispose();
    ho_Rectangle2.Dispose();
    ho_RegionIntersection.Dispose();
    ho_Rectangle3.Dispose();
    ho_RegionIntersection1.Dispose();
    ho_Rectangle1.Dispose();

    hv_Number.Dispose();
    hv_CenterLineData.Dispose();
    hv_ExtenRatio.Dispose();
    hv_RowEdgeTops.Dispose();
    hv_ColumnEdgeTops.Dispose();
    hv_RowEdgeDowns.Dispose();
    hv_ColumnEdgeDowns.Dispose();
    hv_RowEdgeLefts.Dispose();
    hv_ColumnEdgeLefts.Dispose();
    hv_RowEdgeRights.Dispose();
    hv_ColumnEdgeRights.Dispose();
    hv_Number1.Dispose();
    hv_Index.Dispose();
    hv_Phi1.Dispose();
    hv_Area.Dispose();
    hv_Row1.Dispose();
    hv_Column1.Dispose();
    hv_Row22.Dispose();
    hv_Column22.Dispose();
    hv_Phi22.Dispose();
    hv_Length21.Dispose();
    hv_Length22.Dispose();
    hv_Row.Dispose();
    hv_Column.Dispose();
    hv_Phi.Dispose();
    hv_Length1.Dispose();
    hv_Length2.Dispose();
    hv_TopRow.Dispose();
    hv_TopCol.Dispose();
    hv_DownRow.Dispose();
    hv_DownCol.Dispose();
    hv_LeftRow.Dispose();
    hv_LeftCol.Dispose();
    hv_RightRow.Dispose();
    hv_RightCol.Dispose();
    hv_RowEdgeTop.Dispose();
    hv_ColumnEdgeTop.Dispose();
    hv_RowEdgeDown.Dispose();
    hv_ColumnEdgeDown.Dispose();
    hv_RowEdgeLeft.Dispose();
    hv_ColumnEdgeLeft.Dispose();
    hv_RowEdgeRight.Dispose();
    hv_ColumnEdgeRight.Dispose();
    hv_DirectRows.Dispose();
    hv_DirectCols.Dispose();
    hv_CuEdgeRows.Dispose();
    hv_CuEdgeColumns.Dispose();
    hv_ErrorLog1.Dispose();

    return;
  }

  public void DirectPoints (HTuple hv_pointRows, HTuple hv_pointCols, HTuple hv_CenterLineData, 
      out HTuple hv_DirectRows, out HTuple hv_DirectCols)
  {



    // Local iconic variables 

    // Local control variables 

    HTuple hv_Roi_Angle = new HTuple(), hv_RowProj = new HTuple();
    HTuple hv_ColProj = new HTuple(), hv_Angle = new HTuple();
    HTuple hv_Direct = new HTuple(), hv_Distance = new HTuple();
    HTuple hv_Distance1 = new HTuple();
    // Initialize local and output iconic variables 
    hv_DirectRows = new HTuple();
    hv_DirectCols = new HTuple();
    //与ROI方向比较+90为Top  -90为Down 180为left  0为Right
    //DirectRows 第一个值为TOP  第二个值为Down 第三个值为Left  第四个值为Right
    hv_DirectRows.Dispose();
    hv_DirectRows = new HTuple();
    hv_DirectCols.Dispose();
    hv_DirectCols = new HTuple();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_Roi_Angle.Dispose();
    HOperatorSet.AngleLx(hv_CenterLineData.TupleSelect(0), hv_CenterLineData.TupleSelect(
        1), hv_CenterLineData.TupleSelect(2), hv_CenterLineData.TupleSelect(3), out hv_Roi_Angle);
    }
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_RowProj.Dispose();hv_ColProj.Dispose();
    HOperatorSet.ProjectionPl(hv_pointRows.TupleSelect(0), hv_pointCols.TupleSelect(
        0), hv_CenterLineData.TupleSelect(0), hv_CenterLineData.TupleSelect(1), hv_CenterLineData.TupleSelect(
        2), hv_CenterLineData.TupleSelect(3), out hv_RowProj, out hv_ColProj);
    }
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_Angle.Dispose();
    HOperatorSet.AngleLx(hv_RowProj, hv_ColProj, hv_pointRows.TupleSelect(0), hv_pointCols.TupleSelect(
        0), out hv_Angle);
    }
    hv_Direct.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_Direct = ((hv_Angle-hv_Roi_Angle)).TupleDeg()
        ;
    }
    if ((int)((new HTuple(hv_Direct.TupleGreater(85))).TupleAnd(new HTuple(hv_Direct.TupleLess(
        95)))) != 0)
    {
      hv_DirectRows.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_DirectRows = new HTuple();
      hv_DirectRows = hv_DirectRows.TupleConcat(hv_pointRows.TupleSelect(
          0));
      hv_DirectRows = hv_DirectRows.TupleConcat(hv_pointRows.TupleSelect(
          1));
      }
      hv_DirectCols.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_DirectCols = new HTuple();
      hv_DirectCols = hv_DirectCols.TupleConcat(hv_pointCols.TupleSelect(
          0));
      hv_DirectCols = hv_DirectCols.TupleConcat(hv_pointCols.TupleSelect(
          1));
      }
    }
    else
    {
      hv_DirectRows.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_DirectRows = new HTuple();
      hv_DirectRows = hv_DirectRows.TupleConcat(hv_pointRows.TupleSelect(
          1));
      hv_DirectRows = hv_DirectRows.TupleConcat(hv_pointRows.TupleSelect(
          0));
      }
      hv_DirectCols.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_DirectCols = new HTuple();
      hv_DirectCols = hv_DirectCols.TupleConcat(hv_pointCols.TupleSelect(
          1));
      hv_DirectCols = hv_DirectCols.TupleConcat(hv_pointCols.TupleSelect(
          0));
      }
    }
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_Distance.Dispose();
    HOperatorSet.DistancePp(hv_pointRows.TupleSelect(2), hv_pointCols.TupleSelect(
        2), hv_CenterLineData.TupleSelect(2), hv_CenterLineData.TupleSelect(3), out hv_Distance);
    }
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_Distance1.Dispose();
    HOperatorSet.DistancePp(hv_pointRows.TupleSelect(3), hv_pointCols.TupleSelect(
        3), hv_CenterLineData.TupleSelect(2), hv_CenterLineData.TupleSelect(3), out hv_Distance1);
    }
    if ((int)(new HTuple(hv_Distance.TupleGreater(hv_Distance1))) != 0)
    {
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_DirectRows = ((hv_DirectRows.TupleConcat(
          hv_pointRows.TupleSelect(2)))).TupleConcat(hv_pointRows.TupleSelect(3));
      hv_DirectRows.Dispose();
      hv_DirectRows = ExpTmpLocalVar_DirectRows;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_DirectCols = ((hv_DirectCols.TupleConcat(
          hv_pointCols.TupleSelect(2)))).TupleConcat(hv_pointCols.TupleSelect(3));
      hv_DirectCols.Dispose();
      hv_DirectCols = ExpTmpLocalVar_DirectCols;
      }
      }
    }
    else
    {
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_DirectRows = ((hv_DirectRows.TupleConcat(
          hv_pointRows.TupleSelect(3)))).TupleConcat(hv_pointRows.TupleSelect(2));
      hv_DirectRows.Dispose();
      hv_DirectRows = ExpTmpLocalVar_DirectRows;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_DirectCols = ((hv_DirectCols.TupleConcat(
          hv_pointCols.TupleSelect(3)))).TupleConcat(hv_pointCols.TupleSelect(2));
      hv_DirectCols.Dispose();
      hv_DirectCols = ExpTmpLocalVar_DirectCols;
      }
      }
    }

    hv_Roi_Angle.Dispose();
    hv_RowProj.Dispose();
    hv_ColProj.Dispose();
    hv_Angle.Dispose();
    hv_Direct.Dispose();
    hv_Distance.Dispose();
    hv_Distance1.Dispose();

    return;
  }

  public void DropDark (HObject ho_ImageSub, out HObject ho_ImageResult)
  {


    // Initialize local and output iconic variables 
    HOperatorSet.GenEmptyObj(out ho_ImageResult);

  }

  public void FindEdgePoint (HObject ho_Image, HTuple hv_Row, HTuple hv_Column, HTuple hv_TopRow, 
      HTuple hv_TopCol, HTuple hv_MeteringWidth, out HTuple hv_RowEdge, out HTuple hv_ColumnEdge)
  {




    // Local iconic variables 

    HObject ho_Rectangle;

    // Local control variables 

    HTuple hv_Angle = new HTuple(), hv_Distance = new HTuple();
    HTuple hv_Width = new HTuple(), hv_Height = new HTuple();
    HTuple hv_MeasureHandle = new HTuple(), hv_Amplitude = new HTuple();
    HTuple hv_Distance1 = new HTuple();
    // Initialize local and output iconic variables 
    HOperatorSet.GenEmptyObj(out ho_Rectangle);
    hv_RowEdge = new HTuple();
    hv_ColumnEdge = new HTuple();
    hv_Angle.Dispose();
    HOperatorSet.AngleLx(hv_Row, hv_Column, hv_TopRow, hv_TopCol, out hv_Angle);
    hv_Distance.Dispose();
    HOperatorSet.DistancePp(hv_Row, hv_Column, hv_TopRow, hv_TopCol, out hv_Distance);
    hv_Width.Dispose();hv_Height.Dispose();
    HOperatorSet.GetImageSize(ho_Image, out hv_Width, out hv_Height);
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    ho_Rectangle.Dispose();
    HOperatorSet.GenRectangle2(out ho_Rectangle, (hv_Row+hv_TopRow)/2, (hv_Column+hv_TopCol)/2, 
        hv_Angle, hv_Distance, hv_MeteringWidth*0.9);
    }
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_MeasureHandle.Dispose();
    HOperatorSet.GenMeasureRectangle2((hv_Row+hv_TopRow)/2, (hv_Column+hv_TopCol)/2, 
        hv_Angle, hv_Distance, hv_MeteringWidth*0.9, hv_Width, hv_Height, "nearest_neighbor", 
        out hv_MeasureHandle);
    }
    hv_RowEdge.Dispose();hv_ColumnEdge.Dispose();hv_Amplitude.Dispose();hv_Distance1.Dispose();
    HOperatorSet.MeasurePos(ho_Image, hv_MeasureHandle, 1, 65, "negative", "first", 
        out hv_RowEdge, out hv_ColumnEdge, out hv_Amplitude, out hv_Distance1);
    HOperatorSet.CloseMeasure(hv_MeasureHandle);
    ho_Rectangle.Dispose();

    hv_Angle.Dispose();
    hv_Distance.Dispose();
    hv_Width.Dispose();
    hv_Height.Dispose();
    hv_MeasureHandle.Dispose();
    hv_Amplitude.Dispose();
    hv_Distance1.Dispose();

    return;
  }

  public void FollowRoiDirectSortRegion (HObject ho_SelectedRegions, out HObject ho_SortRegion, 
      HTuple hv_Rect2Data, out HTuple hv_CenterLineData)
  {




    // Stack for temporary objects 
    HObject[] OTemp = new HObject[20];

    // Local iconic variables 

    HObject ho_ObjectSelected=null;

    // Local control variables 

    HTuple hv_ROI_Row = new HTuple(), hv_ROI_Col = new HTuple();
    HTuple hv_ROI_Phi = new HTuple(), hv_ROI_Length1 = new HTuple();
    HTuple hv_ROI_Length2 = new HTuple(), hv_rightRow = new HTuple();
    HTuple hv_rightCol = new HTuple(), hv_LeftRow = new HTuple();
    HTuple hv_LeftCol = new HTuple(), hv_TopRow = new HTuple();
    HTuple hv_TopCol = new HTuple(), hv_DownRow = new HTuple();
    HTuple hv_DownCol = new HTuple(), hv_Area = new HTuple();
    HTuple hv_Row1 = new HTuple(), hv_Column1 = new HTuple();
    HTuple hv_Dis = new HTuple(), hv_Index1 = new HTuple();
    HTuple hv_RowProj = new HTuple(), hv_ColProj = new HTuple();
    HTuple hv_Distance = new HTuple(), hv_Indices = new HTuple();
    HTuple hv_Inverted = new HTuple(), hv_Index2 = new HTuple();
    // Initialize local and output iconic variables 
    HOperatorSet.GenEmptyObj(out ho_SortRegion);
    HOperatorSet.GenEmptyObj(out ho_ObjectSelected);
    hv_CenterLineData = new HTuple();
    hv_ROI_Row.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_ROI_Row = hv_Rect2Data.TupleSelect(
        0);
    }
    hv_ROI_Col.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_ROI_Col = hv_Rect2Data.TupleSelect(
        1);
    }
    hv_ROI_Phi.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_ROI_Phi = hv_Rect2Data.TupleSelect(
        2);
    }
    hv_ROI_Length1.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_ROI_Length1 = hv_Rect2Data.TupleSelect(
        3);
    }
    hv_ROI_Length2.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_ROI_Length2 = hv_Rect2Data.TupleSelect(
        4);
    }
    //以矩形方向作为右,计算各边中点
    hv_rightRow.Dispose();hv_rightCol.Dispose();hv_LeftRow.Dispose();hv_LeftCol.Dispose();hv_TopRow.Dispose();hv_TopCol.Dispose();hv_DownRow.Dispose();hv_DownCol.Dispose();
    CalRect2DirectEdgeCenter(hv_Rect2Data, out hv_rightRow, out hv_rightCol, out hv_LeftRow, 
        out hv_LeftCol, out hv_TopRow, out hv_TopCol, out hv_DownRow, out hv_DownCol);
    hv_Area.Dispose();hv_Row1.Dispose();hv_Column1.Dispose();
    HOperatorSet.AreaCenter(ho_SelectedRegions, out hv_Area, out hv_Row1, out hv_Column1);
    hv_CenterLineData.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_CenterLineData = new HTuple();
    hv_CenterLineData = hv_CenterLineData.TupleConcat(hv_LeftRow, hv_LeftCol, hv_rightRow, hv_rightCol);
    }

    hv_Dis.Dispose();
    hv_Dis = new HTuple();
    for (hv_Index1=0; (int)hv_Index1<=(int)((new HTuple(hv_Row1.TupleLength()))-1); hv_Index1 = (int)hv_Index1 + 1)
    {
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_RowProj.Dispose();hv_ColProj.Dispose();
      HOperatorSet.ProjectionPl(hv_Row1.TupleSelect(hv_Index1), hv_Column1.TupleSelect(
          hv_Index1), hv_LeftRow, hv_LeftCol, hv_rightRow, hv_rightCol, out hv_RowProj, 
          out hv_ColProj);
      }
      hv_Distance.Dispose();
      HOperatorSet.DistancePp(hv_RowProj, hv_ColProj, hv_rightRow, hv_rightCol, out hv_Distance);
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_Dis = hv_Dis.TupleConcat(
          hv_Distance);
      hv_Dis.Dispose();
      hv_Dis = ExpTmpLocalVar_Dis;
      }
      }
    }
    hv_Indices.Dispose();
    HOperatorSet.TupleSortIndex(hv_Dis, out hv_Indices);
    hv_Inverted.Dispose();
    HOperatorSet.TupleInverse(hv_Indices, out hv_Inverted);
    ho_SortRegion.Dispose();
    HOperatorSet.GenEmptyObj(out ho_SortRegion);
    for (hv_Index2=0; (int)hv_Index2<=(int)((new HTuple(hv_Inverted.TupleLength()
        ))-1); hv_Index2 = (int)hv_Index2 + 1)
    {
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      ho_ObjectSelected.Dispose();
      HOperatorSet.SelectObj(ho_SelectedRegions, out ho_ObjectSelected, (hv_Inverted.TupleSelect(
          hv_Index2))+1);
      }
      {
      HObject ExpTmpOutVar_0;
      HOperatorSet.ConcatObj(ho_SortRegion, ho_ObjectSelected, out ExpTmpOutVar_0
          );
      ho_SortRegion.Dispose();
      ho_SortRegion = ExpTmpOutVar_0;
      }
    }
    ho_ObjectSelected.Dispose();

    hv_ROI_Row.Dispose();
    hv_ROI_Col.Dispose();
    hv_ROI_Phi.Dispose();
    hv_ROI_Length1.Dispose();
    hv_ROI_Length2.Dispose();
    hv_rightRow.Dispose();
    hv_rightCol.Dispose();
    hv_LeftRow.Dispose();
    hv_LeftCol.Dispose();
    hv_TopRow.Dispose();
    hv_TopCol.Dispose();
    hv_DownRow.Dispose();
    hv_DownCol.Dispose();
    hv_Area.Dispose();
    hv_Row1.Dispose();
    hv_Column1.Dispose();
    hv_Dis.Dispose();
    hv_Index1.Dispose();
    hv_RowProj.Dispose();
    hv_ColProj.Dispose();
    hv_Distance.Dispose();
    hv_Indices.Dispose();
    hv_Inverted.Dispose();
    hv_Index2.Dispose();

    return;
  }

  public void GenAllCross (out HObject ho_Cross, out HObject ho_Cross1, HTuple hv_OutputDict)
  {



    // Local control variables 

    HTuple hv_RowEdgeTops = new HTuple(), hv_ColumnEdgeTops = new HTuple();
    HTuple hv_RowEdgeDowns = new HTuple(), hv_ColumnEdgeDowns = new HTuple();
    HTuple hv_RowEdgeLefts = new HTuple(), hv_ColumnEdgeLefts = new HTuple();
    HTuple hv_RowEdgeRights = new HTuple(), hv_ColumnEdgeRights = new HTuple();
    HTuple hv_CuEdgeColumns = new HTuple(), hv_CuEdgeRows = new HTuple();
    // Initialize local and output iconic variables 
    HOperatorSet.GenEmptyObj(out ho_Cross);
    HOperatorSet.GenEmptyObj(out ho_Cross1);
    hv_RowEdgeTops.Dispose();
    HOperatorSet.GetDictTuple(hv_OutputDict, "RowEdgeTops", out hv_RowEdgeTops);
    hv_ColumnEdgeTops.Dispose();
    HOperatorSet.GetDictTuple(hv_OutputDict, "ColumnEdgeTops", out hv_ColumnEdgeTops);
    hv_RowEdgeDowns.Dispose();
    HOperatorSet.GetDictTuple(hv_OutputDict, "RowEdgeDowns", out hv_RowEdgeDowns);
    hv_ColumnEdgeDowns.Dispose();
    HOperatorSet.GetDictTuple(hv_OutputDict, "ColumnEdgeDowns", out hv_ColumnEdgeDowns);
    hv_RowEdgeLefts.Dispose();
    HOperatorSet.GetDictTuple(hv_OutputDict, "RowEdgeLefts", out hv_RowEdgeLefts);
    hv_ColumnEdgeLefts.Dispose();
    HOperatorSet.GetDictTuple(hv_OutputDict, "ColumnEdgeLefts", out hv_ColumnEdgeLefts);
    hv_RowEdgeRights.Dispose();
    HOperatorSet.GetDictTuple(hv_OutputDict, "RowEdgeRights", out hv_RowEdgeRights);
    hv_ColumnEdgeRights.Dispose();
    HOperatorSet.GetDictTuple(hv_OutputDict, "ColumnEdgeRights", out hv_ColumnEdgeRights);
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    ho_Cross.Dispose();
    HOperatorSet.GenCrossContourXld(out ho_Cross, ((((hv_RowEdgeTops.TupleConcat(
        hv_RowEdgeDowns))).TupleConcat(hv_RowEdgeLefts))).TupleConcat(hv_RowEdgeRights), 
        ((((hv_ColumnEdgeTops.TupleConcat(hv_ColumnEdgeDowns))).TupleConcat(hv_ColumnEdgeLefts))).TupleConcat(
        hv_ColumnEdgeRights), 12, 1.57);
    }
    hv_CuEdgeColumns.Dispose();
    HOperatorSet.GetDictTuple(hv_OutputDict, "CuEdgeColumns", out hv_CuEdgeColumns);
    hv_CuEdgeRows.Dispose();
    HOperatorSet.GetDictTuple(hv_OutputDict, "CuEdgeRows", out hv_CuEdgeRows);
    ho_Cross1.Dispose();
    HOperatorSet.GenCrossContourXld(out ho_Cross1, hv_CuEdgeRows, hv_CuEdgeColumns, 
        16, 0.785398);

    hv_RowEdgeTops.Dispose();
    hv_ColumnEdgeTops.Dispose();
    hv_RowEdgeDowns.Dispose();
    hv_ColumnEdgeDowns.Dispose();
    hv_RowEdgeLefts.Dispose();
    hv_ColumnEdgeLefts.Dispose();
    hv_RowEdgeRights.Dispose();
    hv_ColumnEdgeRights.Dispose();
    hv_CuEdgeColumns.Dispose();
    hv_CuEdgeRows.Dispose();

    return;
  }

  public void GetCu (HObject ho_Image, HObject ho_SelectedRegions1, HTuple hv_Rect2Data, 
      HTuple hv_CenterLineData, out HTuple hv_EdgeRows, out HTuple hv_EdgeColumns, 
      out HTuple hv_ErrorLog)
  {




    // Stack for temporary objects 
    HObject[] OTemp = new HObject[20];

    // Local iconic variables 

    HObject ho_ROI_0, ho_ImageReduced, ho_Regions;
    HObject ho_ConnectedRegions, ho_SelectedRegions, ho_RegionErosion1;
    HObject ho_ImageResult, ho_RegionDilation, ho_RegionDifference;
    HObject ho_ConnectedRegions1, ho_SelectedRegions2, ho_RegionUnion;
    HObject ho_RegionErosion, ho_Rectangle, ho_Cross, ho_RegionLines=null;
    HObject ho_Cross1=null, ho_Cross2=null, ho_RectangleFirst=null;
    HObject ho_RectangleA=null, ho_RectangleB=null;

    // Local control variables 

    HTuple hv_ROI_Row = new HTuple(), hv_ROI_Col = new HTuple();
    HTuple hv_ROI_Phi = new HTuple(), hv_ROI_Length1 = new HTuple();
    HTuple hv_ROI_Length2 = new HTuple(), hv_Row3 = new HTuple();
    HTuple hv_Column3 = new HTuple(), hv_Phi3 = new HTuple();
    HTuple hv_Length11 = new HTuple(), hv_Length23 = new HTuple();
    HTuple hv_Width1 = new HTuple(), hv_Height1 = new HTuple();
    HTuple hv_MeasureHandle = new HTuple(), hv_Amplitude = new HTuple();
    HTuple hv_Distance = new HTuple(), hv_dis = new HTuple();
    HTuple hv_Index = new HTuple(), hv_RowProj = new HTuple();
    HTuple hv_ColProj = new HTuple(), hv_Distance1 = new HTuple();
    HTuple hv_Indices = new HTuple(), hv_Distance2 = new HTuple();
    HTuple hv_Angle = new HTuple(), hv_regRowA = new HTuple();
    HTuple hv_regColA = new HTuple(), hv_Distance3 = new HTuple();
    HTuple hv_regRowB = new HTuple(), hv_regColB = new HTuple();
    HTuple hv_IndexFirst = new HTuple(), hv_IndexA = new HTuple();
    HTuple hv_IndexA1 = new HTuple(), hv_IndexB = new HTuple();
    HTuple hv_IndexB1 = new HTuple();
    // Initialize local and output iconic variables 
    HOperatorSet.GenEmptyObj(out ho_ROI_0);
    HOperatorSet.GenEmptyObj(out ho_ImageReduced);
    HOperatorSet.GenEmptyObj(out ho_Regions);
    HOperatorSet.GenEmptyObj(out ho_ConnectedRegions);
    HOperatorSet.GenEmptyObj(out ho_SelectedRegions);
    HOperatorSet.GenEmptyObj(out ho_RegionErosion1);
    HOperatorSet.GenEmptyObj(out ho_ImageResult);
    HOperatorSet.GenEmptyObj(out ho_RegionDilation);
    HOperatorSet.GenEmptyObj(out ho_RegionDifference);
    HOperatorSet.GenEmptyObj(out ho_ConnectedRegions1);
    HOperatorSet.GenEmptyObj(out ho_SelectedRegions2);
    HOperatorSet.GenEmptyObj(out ho_RegionUnion);
    HOperatorSet.GenEmptyObj(out ho_RegionErosion);
    HOperatorSet.GenEmptyObj(out ho_Rectangle);
    HOperatorSet.GenEmptyObj(out ho_Cross);
    HOperatorSet.GenEmptyObj(out ho_RegionLines);
    HOperatorSet.GenEmptyObj(out ho_Cross1);
    HOperatorSet.GenEmptyObj(out ho_Cross2);
    HOperatorSet.GenEmptyObj(out ho_RectangleFirst);
    HOperatorSet.GenEmptyObj(out ho_RectangleA);
    HOperatorSet.GenEmptyObj(out ho_RectangleB);
    hv_EdgeRows = new HTuple();
    hv_EdgeColumns = new HTuple();
    hv_ErrorLog = new HTuple();
    hv_ROI_Row.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_ROI_Row = hv_Rect2Data.TupleSelect(
        0);
    }
    hv_ROI_Col.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_ROI_Col = hv_Rect2Data.TupleSelect(
        1);
    }
    hv_ROI_Phi.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_ROI_Phi = hv_Rect2Data.TupleSelect(
        2);
    }
    hv_ROI_Length1.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_ROI_Length1 = hv_Rect2Data.TupleSelect(
        3);
    }
    hv_ROI_Length2.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_ROI_Length2 = hv_Rect2Data.TupleSelect(
        4);
    }
    ho_ROI_0.Dispose();
    HOperatorSet.GenRectangle2(out ho_ROI_0, hv_ROI_Row, hv_ROI_Col, hv_ROI_Phi, 
        hv_ROI_Length1, hv_ROI_Length2);
    ho_ImageReduced.Dispose();
    HOperatorSet.ReduceDomain(ho_Image, ho_ROI_0, out ho_ImageReduced);

    if (HDevWindowStack.IsOpen())
    {
      HOperatorSet.SetDraw(HDevWindowStack.GetActive(), "fill");
    }
    hv_ErrorLog.Dispose();
    hv_ErrorLog = new HTuple();
    ho_Regions.Dispose();
    HOperatorSet.Threshold(ho_ImageReduced, out ho_Regions, 98, 255);
    ho_ConnectedRegions.Dispose();
    HOperatorSet.Connection(ho_Regions, out ho_ConnectedRegions);
    ho_SelectedRegions.Dispose();
    HOperatorSet.SelectShape(ho_ConnectedRegions, out ho_SelectedRegions, (new HTuple("area")).TupleConcat(
        "contlength"), "and", (new HTuple(1000)).TupleConcat(200), (new HTuple(99999)).TupleConcat(
        1000));

    {
    HObject ExpTmpOutVar_0;
    HOperatorSet.FillUp(ho_SelectedRegions, out ExpTmpOutVar_0);
    ho_SelectedRegions.Dispose();
    ho_SelectedRegions = ExpTmpOutVar_0;
    }
    ho_RegionErosion1.Dispose();
    HOperatorSet.ErosionCircle(ho_SelectedRegions, out ho_RegionErosion1, 1.5);
    ho_ImageResult.Dispose();
    HOperatorSet.PaintRegion(ho_RegionErosion1, ho_ImageReduced, out ho_ImageResult, 
        255, "fill");
    ho_RegionDilation.Dispose();
    HOperatorSet.DilationCircle(ho_SelectedRegions1, out ho_RegionDilation, 3.5);
    ho_RegionDifference.Dispose();
    HOperatorSet.Difference(ho_SelectedRegions, ho_RegionDilation, out ho_RegionDifference
        );
    ho_ConnectedRegions1.Dispose();
    HOperatorSet.Connection(ho_RegionDifference, out ho_ConnectedRegions1);
    ho_SelectedRegions2.Dispose();
    HOperatorSet.SelectShape(ho_ConnectedRegions1, out ho_SelectedRegions2, (new HTuple("area")).TupleConcat(
        "rectangularity"), "and", (new HTuple(100)).TupleConcat(0.3), (new HTuple(99999)).TupleConcat(
        1));
    ho_RegionUnion.Dispose();
    HOperatorSet.Union1(ho_SelectedRegions2, out ho_RegionUnion);
    ho_RegionErosion.Dispose();
    HOperatorSet.ErosionCircle(ho_RegionUnion, out ho_RegionErosion, 1);
    hv_Row3.Dispose();hv_Column3.Dispose();hv_Phi3.Dispose();hv_Length11.Dispose();hv_Length23.Dispose();
    HOperatorSet.SmallestRectangle2(ho_RegionErosion, out hv_Row3, out hv_Column3, 
        out hv_Phi3, out hv_Length11, out hv_Length23);
    if ((int)(new HTuple((new HTuple(hv_Row3.TupleLength())).TupleNotEqual(1))) != 0)
    {
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_ErrorLog = hv_ErrorLog.TupleConcat(
          "区域内未找到铜片！");
      hv_ErrorLog.Dispose();
      hv_ErrorLog = ExpTmpLocalVar_ErrorLog;
      }
      }
      hv_EdgeRows.Dispose();
      hv_EdgeRows = new HTuple();
      hv_EdgeColumns.Dispose();
      hv_EdgeColumns = new HTuple();
      ho_ROI_0.Dispose();
      ho_ImageReduced.Dispose();
      ho_Regions.Dispose();
      ho_ConnectedRegions.Dispose();
      ho_SelectedRegions.Dispose();
      ho_RegionErosion1.Dispose();
      ho_ImageResult.Dispose();
      ho_RegionDilation.Dispose();
      ho_RegionDifference.Dispose();
      ho_ConnectedRegions1.Dispose();
      ho_SelectedRegions2.Dispose();
      ho_RegionUnion.Dispose();
      ho_RegionErosion.Dispose();
      ho_Rectangle.Dispose();
      ho_Cross.Dispose();
      ho_RegionLines.Dispose();
      ho_Cross1.Dispose();
      ho_Cross2.Dispose();
      ho_RectangleFirst.Dispose();
      ho_RectangleA.Dispose();
      ho_RectangleB.Dispose();

      hv_ROI_Row.Dispose();
      hv_ROI_Col.Dispose();
      hv_ROI_Phi.Dispose();
      hv_ROI_Length1.Dispose();
      hv_ROI_Length2.Dispose();
      hv_Row3.Dispose();
      hv_Column3.Dispose();
      hv_Phi3.Dispose();
      hv_Length11.Dispose();
      hv_Length23.Dispose();
      hv_Width1.Dispose();
      hv_Height1.Dispose();
      hv_MeasureHandle.Dispose();
      hv_Amplitude.Dispose();
      hv_Distance.Dispose();
      hv_dis.Dispose();
      hv_Index.Dispose();
      hv_RowProj.Dispose();
      hv_ColProj.Dispose();
      hv_Distance1.Dispose();
      hv_Indices.Dispose();
      hv_Distance2.Dispose();
      hv_Angle.Dispose();
      hv_regRowA.Dispose();
      hv_regColA.Dispose();
      hv_Distance3.Dispose();
      hv_regRowB.Dispose();
      hv_regColB.Dispose();
      hv_IndexFirst.Dispose();
      hv_IndexA.Dispose();
      hv_IndexA1.Dispose();
      hv_IndexB.Dispose();
      hv_IndexB1.Dispose();

      return;
    }
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    ho_Rectangle.Dispose();
    HOperatorSet.GenRectangle2(out ho_Rectangle, hv_Row3, hv_Column3, hv_Phi3, hv_Length11*1.4, 
        hv_Length23*0.8);
    }
    hv_Width1.Dispose();hv_Height1.Dispose();
    HOperatorSet.GetImageSize(ho_ImageResult, out hv_Width1, out hv_Height1);
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_MeasureHandle.Dispose();
    HOperatorSet.GenMeasureRectangle2(hv_Row3, hv_Column3, hv_Phi3, hv_Length11*1.4, 
        hv_Length23*0.8, hv_Width1, hv_Height1, "nearest_neighbor", out hv_MeasureHandle);
    }
    hv_EdgeRows.Dispose();hv_EdgeColumns.Dispose();hv_Amplitude.Dispose();hv_Distance.Dispose();
    HOperatorSet.MeasurePos(ho_ImageResult, hv_MeasureHandle, 1, 80, "all", "all", 
        out hv_EdgeRows, out hv_EdgeColumns, out hv_Amplitude, out hv_Distance);
    HOperatorSet.CloseMeasure(hv_MeasureHandle);
    ho_Cross.Dispose();
    HOperatorSet.GenCrossContourXld(out ho_Cross, hv_EdgeRows, hv_EdgeColumns, 6, 
        hv_Phi3);
    hv_dis.Dispose();
    hv_dis = new HTuple();
    for (hv_Index=0; (int)hv_Index<=(int)((new HTuple(hv_EdgeRows.TupleLength()))-1); hv_Index = (int)hv_Index + 1)
    {
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_RowProj.Dispose();hv_ColProj.Dispose();
      HOperatorSet.ProjectionPl(hv_EdgeRows.TupleSelect(hv_Index), hv_EdgeColumns.TupleSelect(
          hv_Index), hv_CenterLineData.TupleSelect(0), hv_CenterLineData.TupleSelect(
          1), hv_CenterLineData.TupleSelect(2), hv_CenterLineData.TupleSelect(3), 
          out hv_RowProj, out hv_ColProj);
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_Distance1.Dispose();
      HOperatorSet.DistancePp(hv_RowProj, hv_ColProj, hv_CenterLineData.TupleSelect(
          2), hv_CenterLineData.TupleSelect(3), out hv_Distance1);
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_dis = hv_dis.TupleConcat(
          hv_Distance1);
      hv_dis.Dispose();
      hv_dis = ExpTmpLocalVar_dis;
      }
      }
    }
    hv_Indices.Dispose();
    HOperatorSet.TupleSortIndex(hv_dis, out hv_Indices);


    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_EdgeRows = hv_EdgeRows.TupleSelect(
        hv_Indices.TupleInverse());
    hv_EdgeRows.Dispose();
    hv_EdgeRows = ExpTmpLocalVar_EdgeRows;
    }
    }
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_EdgeColumns = hv_EdgeColumns.TupleSelect(
        hv_Indices.TupleInverse());
    hv_EdgeColumns.Dispose();
    hv_EdgeColumns = ExpTmpLocalVar_EdgeColumns;
    }
    }

    //点数少于6个，说明有被遮挡，补上0
    if ((int)((new HTuple((new HTuple(hv_EdgeRows.TupleLength())).TupleLess(6))).TupleAnd(
        new HTuple((new HTuple(hv_EdgeRows.TupleLength())).TupleGreater(0)))) != 0)
    {

      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      ho_RegionLines.Dispose();
      HOperatorSet.GenRegionLine(out ho_RegionLines, hv_EdgeRows.TupleSelect(0), 
          hv_EdgeColumns.TupleSelect(0), hv_EdgeRows.TupleSelect((new HTuple(hv_EdgeRows.TupleLength()
          ))-1), hv_EdgeColumns.TupleSelect((new HTuple(hv_EdgeColumns.TupleLength()
          ))-1));
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_Distance2.Dispose();
      HOperatorSet.DistancePp(hv_EdgeRows.TupleSelect(0), hv_EdgeColumns.TupleSelect(
          0), hv_EdgeRows.TupleSelect((new HTuple(hv_EdgeRows.TupleLength()))-1), 
          hv_EdgeColumns.TupleSelect((new HTuple(hv_EdgeColumns.TupleLength()))-1), 
          out hv_Distance2);
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_Angle.Dispose();
      HOperatorSet.AngleLx(hv_EdgeRows.TupleSelect(0), hv_EdgeColumns.TupleSelect(
          0), hv_EdgeRows.TupleSelect((new HTuple(hv_EdgeRows.TupleLength()))-1), 
          hv_EdgeColumns.TupleSelect((new HTuple(hv_EdgeColumns.TupleLength()))-1), 
          out hv_Angle);
      }

      hv_regRowA.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_regRowA = (hv_EdgeRows.TupleSelect(
          0))-(((hv_Angle.TupleSin())*hv_Distance2)*0.25);
      }
      hv_regColA.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_regColA = (hv_EdgeColumns.TupleSelect(
          0))+(((hv_Angle.TupleCos())*hv_Distance2)*0.25);
      }
      //计算点到右侧点的距离，若更远则方向反了
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_Distance3.Dispose();
      HOperatorSet.DistancePp(hv_regRowA, hv_regColA, hv_EdgeRows.TupleSelect((new HTuple(hv_EdgeRows.TupleLength()
          ))-1), hv_EdgeColumns.TupleSelect((new HTuple(hv_EdgeColumns.TupleLength()
          ))-1), out hv_Distance3);
      }
      if ((int)(new HTuple(hv_Distance3.TupleGreater(hv_Distance2))) != 0)
      {
        hv_regRowA.Dispose();
        using (HDevDisposeHelper dh = new HDevDisposeHelper())
        {
        hv_regRowA = (hv_EdgeRows.TupleSelect(
            0))+(((hv_Angle.TupleSin())*hv_Distance2)*0.25);
        }
        hv_regColA.Dispose();
        using (HDevDisposeHelper dh = new HDevDisposeHelper())
        {
        hv_regColA = (hv_EdgeColumns.TupleSelect(
            0))-(((hv_Angle.TupleCos())*hv_Distance2)*0.25);
        }
        hv_regRowB.Dispose();
        using (HDevDisposeHelper dh = new HDevDisposeHelper())
        {
        hv_regRowB = (hv_EdgeRows.TupleSelect(
            0))+(((hv_Angle.TupleSin())*hv_Distance2)*0.75);
        }
        hv_regColB.Dispose();
        using (HDevDisposeHelper dh = new HDevDisposeHelper())
        {
        hv_regColB = (hv_EdgeColumns.TupleSelect(
            0))-(((hv_Angle.TupleCos())*hv_Distance2)*0.75);
        }
      }
      else
      {
        hv_regRowB.Dispose();
        using (HDevDisposeHelper dh = new HDevDisposeHelper())
        {
        hv_regRowB = (hv_EdgeRows.TupleSelect(
            0))-(((hv_Angle.TupleSin())*hv_Distance2)*0.75);
        }
        hv_regColB.Dispose();
        using (HDevDisposeHelper dh = new HDevDisposeHelper())
        {
        hv_regColB = (hv_EdgeColumns.TupleSelect(
            0))+(((hv_Angle.TupleCos())*hv_Distance2)*0.75);
        }
      }
      ho_Cross1.Dispose();
      HOperatorSet.GenCrossContourXld(out ho_Cross1, hv_regRowA, hv_regColA, 16, 
          hv_Angle);
      ho_Cross2.Dispose();
      HOperatorSet.GenCrossContourXld(out ho_Cross2, hv_regRowB, hv_regColB, 16, 
          hv_Angle);

      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      ho_RectangleFirst.Dispose();
      HOperatorSet.GenRectangle2(out ho_RectangleFirst, hv_EdgeRows.TupleSelect(0), 
          hv_EdgeColumns.TupleSelect(0), hv_Angle, 20, 10);
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_IndexFirst.Dispose();
      HOperatorSet.GetRegionIndex(ho_RectangleFirst, ((hv_EdgeRows.TupleSelect(0))).TupleCeil()
          , ((hv_EdgeColumns.TupleSelect(0))).TupleCeil(), out hv_IndexFirst);
      }
      if ((int)(new HTuple((new HTuple(hv_IndexFirst.TupleLength())).TupleEqual(0))) != 0)
      {
        {
        HTuple ExpTmpOutVar_0;
        HOperatorSet.TupleInsert(hv_EdgeRows, 0, 0, out ExpTmpOutVar_0);
        hv_EdgeRows.Dispose();
        hv_EdgeRows = ExpTmpOutVar_0;
        }
        {
        HTuple ExpTmpOutVar_0;
        HOperatorSet.TupleInsert(hv_EdgeColumns, 0, 0, out ExpTmpOutVar_0);
        hv_EdgeColumns.Dispose();
        hv_EdgeColumns = ExpTmpOutVar_0;
        }
      }

      if ((int)(new HTuple((new HTuple(hv_EdgeRows.TupleLength())).TupleLess(2))) != 0)
      {
        using (HDevDisposeHelper dh = new HDevDisposeHelper())
        {
        {
        HTuple 
          ExpTmpLocalVar_EdgeRows = hv_EdgeRows.TupleConcat(
            ((((new HTuple(0)).TupleConcat(0)).TupleConcat(0)).TupleConcat(0)).TupleConcat(
            0));
        hv_EdgeRows.Dispose();
        hv_EdgeRows = ExpTmpLocalVar_EdgeRows;
        }
        }
        using (HDevDisposeHelper dh = new HDevDisposeHelper())
        {
        {
        HTuple 
          ExpTmpLocalVar_EdgeColumns = hv_EdgeColumns.TupleConcat(
            ((((new HTuple(0)).TupleConcat(0)).TupleConcat(0)).TupleConcat(0)).TupleConcat(
            0));
        hv_EdgeColumns.Dispose();
        hv_EdgeColumns = ExpTmpLocalVar_EdgeColumns;
        }
        }
      }

      ho_RectangleA.Dispose();
      HOperatorSet.GenRectangle2(out ho_RectangleA, hv_regRowA, hv_regColA, hv_Angle, 
          20, 10);
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_IndexA.Dispose();
      HOperatorSet.GetRegionIndex(ho_RectangleA, ((hv_EdgeRows.TupleSelect(1))).TupleCeil()
          , ((hv_EdgeColumns.TupleSelect(1))).TupleCeil(), out hv_IndexA);
      }
      if ((int)(new HTuple((new HTuple(hv_IndexA.TupleLength())).TupleEqual(0))) != 0)
      {
        {
        HTuple ExpTmpOutVar_0;
        HOperatorSet.TupleInsert(hv_EdgeRows, 1, 0, out ExpTmpOutVar_0);
        hv_EdgeRows.Dispose();
        hv_EdgeRows = ExpTmpOutVar_0;
        }
        {
        HTuple ExpTmpOutVar_0;
        HOperatorSet.TupleInsert(hv_EdgeColumns, 1, 0, out ExpTmpOutVar_0);
        hv_EdgeColumns.Dispose();
        hv_EdgeColumns = ExpTmpOutVar_0;
        }
      }

      if ((int)(new HTuple((new HTuple(hv_EdgeRows.TupleLength())).TupleLess(3))) != 0)
      {
        using (HDevDisposeHelper dh = new HDevDisposeHelper())
        {
        {
        HTuple 
          ExpTmpLocalVar_EdgeRows = hv_EdgeRows.TupleConcat(
            (((new HTuple(0)).TupleConcat(0)).TupleConcat(0)).TupleConcat(0));
        hv_EdgeRows.Dispose();
        hv_EdgeRows = ExpTmpLocalVar_EdgeRows;
        }
        }
        using (HDevDisposeHelper dh = new HDevDisposeHelper())
        {
        {
        HTuple 
          ExpTmpLocalVar_EdgeColumns = hv_EdgeColumns.TupleConcat(
            (((new HTuple(0)).TupleConcat(0)).TupleConcat(0)).TupleConcat(0));
        hv_EdgeColumns.Dispose();
        hv_EdgeColumns = ExpTmpLocalVar_EdgeColumns;
        }
        }
      }

      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_IndexA1.Dispose();
      HOperatorSet.GetRegionIndex(ho_RectangleA, ((hv_EdgeRows.TupleSelect(2))).TupleCeil()
          , ((hv_EdgeColumns.TupleSelect(2))).TupleCeil(), out hv_IndexA1);
      }
      if ((int)(new HTuple((new HTuple(hv_IndexA1.TupleLength())).TupleEqual(0))) != 0)
      {
        {
        HTuple ExpTmpOutVar_0;
        HOperatorSet.TupleInsert(hv_EdgeRows, 2, 0, out ExpTmpOutVar_0);
        hv_EdgeRows.Dispose();
        hv_EdgeRows = ExpTmpOutVar_0;
        }
        {
        HTuple ExpTmpOutVar_0;
        HOperatorSet.TupleInsert(hv_EdgeColumns, 2, 0, out ExpTmpOutVar_0);
        hv_EdgeColumns.Dispose();
        hv_EdgeColumns = ExpTmpOutVar_0;
        }
      }

      if ((int)(new HTuple((new HTuple(hv_EdgeRows.TupleLength())).TupleLess(4))) != 0)
      {
        using (HDevDisposeHelper dh = new HDevDisposeHelper())
        {
        {
        HTuple 
          ExpTmpLocalVar_EdgeRows = hv_EdgeRows.TupleConcat(
            ((new HTuple(0)).TupleConcat(0)).TupleConcat(0));
        hv_EdgeRows.Dispose();
        hv_EdgeRows = ExpTmpLocalVar_EdgeRows;
        }
        }
        using (HDevDisposeHelper dh = new HDevDisposeHelper())
        {
        {
        HTuple 
          ExpTmpLocalVar_EdgeColumns = hv_EdgeColumns.TupleConcat(
            ((new HTuple(0)).TupleConcat(0)).TupleConcat(0));
        hv_EdgeColumns.Dispose();
        hv_EdgeColumns = ExpTmpLocalVar_EdgeColumns;
        }
        }
      }

      ho_RectangleB.Dispose();
      HOperatorSet.GenRectangle2(out ho_RectangleB, hv_regRowB, hv_regColB, hv_Angle, 
          20, 10);
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_IndexB.Dispose();
      HOperatorSet.GetRegionIndex(ho_RectangleB, ((hv_EdgeRows.TupleSelect(3))).TupleCeil()
          , ((hv_EdgeColumns.TupleSelect(3))).TupleCeil(), out hv_IndexB);
      }
      if ((int)(new HTuple((new HTuple(hv_IndexB.TupleLength())).TupleEqual(0))) != 0)
      {
        {
        HTuple ExpTmpOutVar_0;
        HOperatorSet.TupleInsert(hv_EdgeRows, 3, 0, out ExpTmpOutVar_0);
        hv_EdgeRows.Dispose();
        hv_EdgeRows = ExpTmpOutVar_0;
        }
        {
        HTuple ExpTmpOutVar_0;
        HOperatorSet.TupleInsert(hv_EdgeColumns, 3, 0, out ExpTmpOutVar_0);
        hv_EdgeColumns.Dispose();
        hv_EdgeColumns = ExpTmpOutVar_0;
        }
      }

      if ((int)(new HTuple((new HTuple(hv_EdgeRows.TupleLength())).TupleLess(5))) != 0)
      {
        using (HDevDisposeHelper dh = new HDevDisposeHelper())
        {
        {
        HTuple 
          ExpTmpLocalVar_EdgeRows = hv_EdgeRows.TupleConcat(
            (new HTuple(0)).TupleConcat(0));
        hv_EdgeRows.Dispose();
        hv_EdgeRows = ExpTmpLocalVar_EdgeRows;
        }
        }
        using (HDevDisposeHelper dh = new HDevDisposeHelper())
        {
        {
        HTuple 
          ExpTmpLocalVar_EdgeColumns = hv_EdgeColumns.TupleConcat(
            (new HTuple(0)).TupleConcat(0));
        hv_EdgeColumns.Dispose();
        hv_EdgeColumns = ExpTmpLocalVar_EdgeColumns;
        }
        }
      }

      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_IndexB1.Dispose();
      HOperatorSet.GetRegionIndex(ho_RectangleB, ((hv_EdgeRows.TupleSelect(4))).TupleCeil()
          , ((hv_EdgeColumns.TupleSelect(4))).TupleCeil(), out hv_IndexB1);
      }
      if ((int)(new HTuple((new HTuple(hv_IndexB1.TupleLength())).TupleEqual(0))) != 0)
      {
        {
        HTuple ExpTmpOutVar_0;
        HOperatorSet.TupleInsert(hv_EdgeRows, 4, 0, out ExpTmpOutVar_0);
        hv_EdgeRows.Dispose();
        hv_EdgeRows = ExpTmpOutVar_0;
        }
        {
        HTuple ExpTmpOutVar_0;
        HOperatorSet.TupleInsert(hv_EdgeColumns, 4, 0, out ExpTmpOutVar_0);
        hv_EdgeColumns.Dispose();
        hv_EdgeColumns = ExpTmpOutVar_0;
        }
      }
      if ((int)(new HTuple((new HTuple(hv_EdgeRows.TupleLength())).TupleLess(6))) != 0)
      {
        using (HDevDisposeHelper dh = new HDevDisposeHelper())
        {
        {
        HTuple 
          ExpTmpLocalVar_EdgeRows = hv_EdgeRows.TupleConcat(
            0);
        hv_EdgeRows.Dispose();
        hv_EdgeRows = ExpTmpLocalVar_EdgeRows;
        }
        }
        using (HDevDisposeHelper dh = new HDevDisposeHelper())
        {
        {
        HTuple 
          ExpTmpLocalVar_EdgeColumns = hv_EdgeColumns.TupleConcat(
            0);
        hv_EdgeColumns.Dispose();
        hv_EdgeColumns = ExpTmpLocalVar_EdgeColumns;
        }
        }
      }
    }
    else if ((int)(new HTuple((new HTuple(hv_EdgeRows.TupleLength())).TupleLess(
        1))) != 0)
    {
      hv_EdgeRows.Dispose();
      hv_EdgeRows = new HTuple();
      hv_EdgeRows[0] = 0;
      hv_EdgeRows[1] = 0;
      hv_EdgeRows[2] = 0;
      hv_EdgeRows[3] = 0;
      hv_EdgeRows[4] = 0;
      hv_EdgeRows[5] = 0;
      hv_EdgeColumns.Dispose();
      hv_EdgeColumns = new HTuple();
      hv_EdgeColumns[0] = 0;
      hv_EdgeColumns[1] = 0;
      hv_EdgeColumns[2] = 0;
      hv_EdgeColumns[3] = 0;
      hv_EdgeColumns[4] = 0;
      hv_EdgeColumns[5] = 0;
    }
    ho_ROI_0.Dispose();
    ho_ImageReduced.Dispose();
    ho_Regions.Dispose();
    ho_ConnectedRegions.Dispose();
    ho_SelectedRegions.Dispose();
    ho_RegionErosion1.Dispose();
    ho_ImageResult.Dispose();
    ho_RegionDilation.Dispose();
    ho_RegionDifference.Dispose();
    ho_ConnectedRegions1.Dispose();
    ho_SelectedRegions2.Dispose();
    ho_RegionUnion.Dispose();
    ho_RegionErosion.Dispose();
    ho_Rectangle.Dispose();
    ho_Cross.Dispose();
    ho_RegionLines.Dispose();
    ho_Cross1.Dispose();
    ho_Cross2.Dispose();
    ho_RectangleFirst.Dispose();
    ho_RectangleA.Dispose();
    ho_RectangleB.Dispose();

    hv_ROI_Row.Dispose();
    hv_ROI_Col.Dispose();
    hv_ROI_Phi.Dispose();
    hv_ROI_Length1.Dispose();
    hv_ROI_Length2.Dispose();
    hv_Row3.Dispose();
    hv_Column3.Dispose();
    hv_Phi3.Dispose();
    hv_Length11.Dispose();
    hv_Length23.Dispose();
    hv_Width1.Dispose();
    hv_Height1.Dispose();
    hv_MeasureHandle.Dispose();
    hv_Amplitude.Dispose();
    hv_Distance.Dispose();
    hv_dis.Dispose();
    hv_Index.Dispose();
    hv_RowProj.Dispose();
    hv_ColProj.Dispose();
    hv_Distance1.Dispose();
    hv_Indices.Dispose();
    hv_Distance2.Dispose();
    hv_Angle.Dispose();
    hv_regRowA.Dispose();
    hv_regColA.Dispose();
    hv_Distance3.Dispose();
    hv_regRowB.Dispose();
    hv_regColB.Dispose();
    hv_IndexFirst.Dispose();
    hv_IndexA.Dispose();
    hv_IndexA1.Dispose();
    hv_IndexB.Dispose();
    hv_IndexB1.Dispose();

    return;
  }

  public void GetSilver (HObject ho_Image, out HObject ho_AgRegions, HTuple hv_Rect2Data, 
      out HTuple hv_Number)
  {




    // Stack for temporary objects 
    HObject[] OTemp = new HObject[20];

    // Local iconic variables 

    HObject ho_ROI_0, ho_ImageReduced, ho_Regions;
    HObject ho_RegionErosion, ho_ConnectedRegions, ho_SelectedRegions;
    HObject ho_RegionDilation, ho_RegionIntersection, ho_ConnectedRegions1;
    HObject ho_SelectedRegions1, ho_ObjectSelected=null;

    // Local control variables 

    HTuple hv_ROI_Row = new HTuple(), hv_ROI_Col = new HTuple();
    HTuple hv_ROI_Phi = new HTuple(), hv_ROI_Length1 = new HTuple();
    HTuple hv_ROI_Length2 = new HTuple(), hv_Height = new HTuple();
    HTuple hv_Width = new HTuple(), hv_Ratio = new HTuple();
    HTuple hv_Indices = new HTuple(), hv_Inverted = new HTuple();
    HTuple hv_Index = new HTuple();
    // Initialize local and output iconic variables 
    HOperatorSet.GenEmptyObj(out ho_AgRegions);
    HOperatorSet.GenEmptyObj(out ho_ROI_0);
    HOperatorSet.GenEmptyObj(out ho_ImageReduced);
    HOperatorSet.GenEmptyObj(out ho_Regions);
    HOperatorSet.GenEmptyObj(out ho_RegionErosion);
    HOperatorSet.GenEmptyObj(out ho_ConnectedRegions);
    HOperatorSet.GenEmptyObj(out ho_SelectedRegions);
    HOperatorSet.GenEmptyObj(out ho_RegionDilation);
    HOperatorSet.GenEmptyObj(out ho_RegionIntersection);
    HOperatorSet.GenEmptyObj(out ho_ConnectedRegions1);
    HOperatorSet.GenEmptyObj(out ho_SelectedRegions1);
    HOperatorSet.GenEmptyObj(out ho_ObjectSelected);
    hv_Number = new HTuple();
    hv_ROI_Row.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_ROI_Row = hv_Rect2Data.TupleSelect(
        0);
    }
    hv_ROI_Col.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_ROI_Col = hv_Rect2Data.TupleSelect(
        1);
    }
    hv_ROI_Phi.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_ROI_Phi = hv_Rect2Data.TupleSelect(
        2);
    }
    hv_ROI_Length1.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_ROI_Length1 = hv_Rect2Data.TupleSelect(
        3);
    }
    hv_ROI_Length2.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_ROI_Length2 = hv_Rect2Data.TupleSelect(
        4);
    }
    ho_ROI_0.Dispose();
    HOperatorSet.GenRectangle2(out ho_ROI_0, hv_ROI_Row, hv_ROI_Col, hv_ROI_Phi, 
        hv_ROI_Length1, hv_ROI_Length2);
    ho_ImageReduced.Dispose();
    HOperatorSet.ReduceDomain(ho_Image, ho_ROI_0, out ho_ImageReduced);
    ho_Regions.Dispose();
    HOperatorSet.Threshold(ho_ImageReduced, out ho_Regions, 245, 255);
    ho_RegionErosion.Dispose();
    HOperatorSet.ErosionCircle(ho_Regions, out ho_RegionErosion, 1.5);
    ho_ConnectedRegions.Dispose();
    HOperatorSet.Connection(ho_RegionErosion, out ho_ConnectedRegions);
    ho_SelectedRegions.Dispose();
    HOperatorSet.SelectShape(ho_ConnectedRegions, out ho_SelectedRegions, "area", 
        "and", 300, 99999);
    ho_RegionDilation.Dispose();
    HOperatorSet.DilationCircle(ho_SelectedRegions, out ho_RegionDilation, 6);
    ho_RegionIntersection.Dispose();
    HOperatorSet.Intersection(ho_RegionDilation, ho_Regions, out ho_RegionIntersection
        );
    ho_ConnectedRegions1.Dispose();
    HOperatorSet.Connection(ho_RegionIntersection, out ho_ConnectedRegions1);
    ho_SelectedRegions1.Dispose();
    HOperatorSet.SelectShape(ho_ConnectedRegions1, out ho_SelectedRegions1, "area", 
        "and", 800, 99999);
    ho_AgRegions.Dispose();
    HOperatorSet.GenEmptyRegion(out ho_AgRegions);
    hv_Height.Dispose();hv_Width.Dispose();hv_Ratio.Dispose();
    HOperatorSet.HeightWidthRatio(ho_SelectedRegions1, out hv_Height, out hv_Width, 
        out hv_Ratio);
    if ((int)(new HTuple((new HTuple(hv_Ratio.TupleLength())).TupleGreater(3))) != 0)
    {
      hv_Indices.Dispose();
      HOperatorSet.TupleSortIndex(hv_Ratio, out hv_Indices);
      hv_Inverted.Dispose();
      HOperatorSet.TupleInverse(hv_Indices, out hv_Inverted);
      for (hv_Index=0; (int)hv_Index<=3; hv_Index = (int)hv_Index + 1)
      {
        using (HDevDisposeHelper dh = new HDevDisposeHelper())
        {
        ho_ObjectSelected.Dispose();
        HOperatorSet.SelectObj(ho_SelectedRegions1, out ho_ObjectSelected, (hv_Inverted.TupleSelect(
            hv_Index))+1);
        }
        {
        HObject ExpTmpOutVar_0;
        HOperatorSet.ConcatObj(ho_AgRegions, ho_ObjectSelected, out ExpTmpOutVar_0
            );
        ho_AgRegions.Dispose();
        ho_AgRegions = ExpTmpOutVar_0;
        }
        if ((int)(new HTuple(hv_Index.TupleEqual(0))) != 0)
        {
          {
          HObject ExpTmpOutVar_0;
          HOperatorSet.Union1(ho_AgRegions, out ExpTmpOutVar_0);
          ho_AgRegions.Dispose();
          ho_AgRegions = ExpTmpOutVar_0;
          }
        }
      }
    }
    else
    {
      ho_AgRegions.Dispose();
      ho_AgRegions = new HObject(ho_SelectedRegions1);
    }
    hv_Number.Dispose();
    HOperatorSet.CountObj(ho_AgRegions, out hv_Number);
    ho_ROI_0.Dispose();
    ho_ImageReduced.Dispose();
    ho_Regions.Dispose();
    ho_RegionErosion.Dispose();
    ho_ConnectedRegions.Dispose();
    ho_SelectedRegions.Dispose();
    ho_RegionDilation.Dispose();
    ho_RegionIntersection.Dispose();
    ho_ConnectedRegions1.Dispose();
    ho_SelectedRegions1.Dispose();
    ho_ObjectSelected.Dispose();

    hv_ROI_Row.Dispose();
    hv_ROI_Col.Dispose();
    hv_ROI_Phi.Dispose();
    hv_ROI_Length1.Dispose();
    hv_ROI_Length2.Dispose();
    hv_Height.Dispose();
    hv_Width.Dispose();
    hv_Ratio.Dispose();
    hv_Indices.Dispose();
    hv_Inverted.Dispose();
    hv_Index.Dispose();

    return;
  }

#if !NO_EXPORT_MAIN
  // Main procedure 
  private void action()
  {


    // Stack for temporary objects 
    HObject[] OTemp = new HObject[20];

    // Local iconic variables 

    HObject ho_Image, ho_OC=null, ho_Cross, ho_Cross1;

    // Local control variables 

    HTuple hv_Channels = new HTuple(), hv_WindowHandle = new HTuple();
    HTuple hv_ROI_Row = new HTuple(), hv_ROI_Col = new HTuple();
    HTuple hv_ROI_Phi = new HTuple(), hv_ROI_Length1 = new HTuple();
    HTuple hv_ROI_Length2 = new HTuple(), hv_OutputDict = new HTuple();
    HTuple hv_ErrorLog = new HTuple(), hv_Colors = new HTuple();
    // Initialize local and output iconic variables 
    HOperatorSet.GenEmptyObj(out ho_Image);
    HOperatorSet.GenEmptyObj(out ho_OC);
    HOperatorSet.GenEmptyObj(out ho_Cross);
    HOperatorSet.GenEmptyObj(out ho_Cross1);
    ho_Image.Dispose();
    HOperatorSet.ReadImage(out ho_Image, "E:/Image/20220705/666666_14174747/2_4.tiff");
    hv_Channels.Dispose();
    HOperatorSet.CountChannels(ho_Image, out hv_Channels);
    if ((int)((new HTuple((new HTuple(hv_Channels.TupleLength())).TupleNotEqual(0))).TupleAnd(
        new HTuple(hv_Channels.TupleEqual(3)))) != 0)
    {
      {
      HObject ExpTmpOutVar_0;ho_OC.Dispose();
      Color2OCAG(ho_Image, out ExpTmpOutVar_0, out ho_OC);
      ho_Image.Dispose();
      ho_Image = ExpTmpOutVar_0;
      }
    }
    dev_update_off();
    if (HDevWindowStack.IsOpen())
    {
      HOperatorSet.DispObj(ho_Image, HDevWindowStack.GetActive());
    }
    if (HDevWindowStack.IsOpen())
    {
      HOperatorSet.SetDraw(HDevWindowStack.GetActive(), "margin");
    }
    if (HDevWindowStack.IsOpen())
    {
      hv_WindowHandle = HDevWindowStack.GetActive();
    }
    hv_ROI_Row.Dispose();hv_ROI_Col.Dispose();hv_ROI_Phi.Dispose();hv_ROI_Length1.Dispose();hv_ROI_Length2.Dispose();
    HOperatorSet.DrawRectangle2(hv_WindowHandle, out hv_ROI_Row, out hv_ROI_Col, 
        out hv_ROI_Phi, out hv_ROI_Length1, out hv_ROI_Length2);

    //GetSilver (Image, AgRegions, [ROI_Row, ROI_Col, ROI_Phi, ROI_Length1, ROI_Length2], Number)
    //按照ROI的方向将4条银浆排序
    //FollowRoiDirectSortRegion (SelectedRegions, SortRegion, [ ROI_Row, ROI_Col, ROI_Phi, ROI_Length1, ROI_Length2], CenterLineData1)

    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_OutputDict.Dispose();hv_ErrorLog.Dispose();
    CalSilverSize(ho_Image, ((((((hv_ROI_Row.TupleConcat(hv_ROI_Col))).TupleConcat(
        hv_ROI_Phi))).TupleConcat(hv_ROI_Length1))).TupleConcat(hv_ROI_Length2), 
        out hv_OutputDict, out hv_ErrorLog);
    }

    ho_Cross.Dispose();ho_Cross1.Dispose();
    GenAllCross(out ho_Cross, out ho_Cross1, hv_OutputDict);
    if (HDevWindowStack.IsOpen())
    {
      HOperatorSet.DispObj(ho_Cross, HDevWindowStack.GetActive());
    }

    hv_Colors.Dispose();
    HOperatorSet.QueryAllColors(hv_WindowHandle, out hv_Colors);
    if (HDevWindowStack.IsOpen())
    {
      HOperatorSet.SetColor(HDevWindowStack.GetActive(), "medium aquamarine");
    }
    if (HDevWindowStack.IsOpen())
    {
      HOperatorSet.DispObj(ho_Cross1, HDevWindowStack.GetActive());
    }


    ho_Image.Dispose();
    ho_OC.Dispose();
    ho_Cross.Dispose();
    ho_Cross1.Dispose();

    hv_Channels.Dispose();
    hv_WindowHandle.Dispose();
    hv_ROI_Row.Dispose();
    hv_ROI_Col.Dispose();
    hv_ROI_Phi.Dispose();
    hv_ROI_Length1.Dispose();
    hv_ROI_Length2.Dispose();
    hv_OutputDict.Dispose();
    hv_ErrorLog.Dispose();
    hv_Colors.Dispose();

  }

#endif


}
#if !(NO_EXPORT_MAIN || NO_EXPORT_APP_MAIN)
public class HDevelopExportApp
{
  static void Main(string[] args)
  {
    new HDevelopExport();
  }
}
#endif

